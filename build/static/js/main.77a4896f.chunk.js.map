{"version":3,"sources":["imgs/hex-bg-2.png","Home.js","defaultMapNames.js","Editor.js","Table.js","Lobbies.js","Lobby.js","GameSession.js","darkesthour.wav","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","document","body","style","backgroundColor","_jsx","Container","fluid","children","Row","xs","display","justifyContent","_jsxs","Col","src","home_bg","alt","height","concat","window","innerHeight","width","defaultMapNames","location","hostname","Editor","viewMode","undefined","spaceOptions","setSpaceOptions","useState","label","value","color","numTiles","maxTiles","toggleDrawingBtnColor","setToggleDrawingBtnColor","currSpace","setCurrSpace","unsavedChanges","setUnsavedChanges","mapEditor","setMapEditor","spaceSelector","setSpaceSelector","sharedAngle","setSharedAngle","sharedAngleRef","useRef","addEventListener","event","keycode","parseInt","keyCode","console","log","length","current","updateSharedAngle","setInterval","socket","on","id","data","err","message","hexClickHandle","e","emit","test","updatedMap","_objectSpread","newMap","oldTile","Object","keys","tiles","find","tile","tileType","target","getStage","findOne","setAttrs","fill","mapSelection","updatedSpaceOptions","space_id","space","currentTarget","setNewMap","lines","setLines","React","isDrawing","setIsDrawing","drawingEnabled","setDrawingEnabled","handleMouseDown","transform","layerRef","getAbsoluteTransform","copy","invert","point","getPointerPosition","points","x","y","handleMouseMove","stage","lastLine","splice","primarySelectStyles","control","base","borderColor","boxShadow","marginBottom","lineRef","angle","setAngle","node","animation","Konva","Animation","frame","newAngle","rotation","getLayer","batchDraw","start","stop","Math","cos","PI","sin","stageScaleX","setStageScaleX","innerWidth","stageScaleY","setStageScaleY","Button","variant","onClick","confirm","className","sm","md","Stage","pixelRatio","marginTop","onWheel","evt","preventDefault","deltaY","scaleX","scaleY","onMouseDown","onMousemove","onTouchStart","onTouchmove","onMouseup","handleMouseUp","draggable","Layer","generateMapEditor","hexagons","row","col","String","fromCharCode","toString","padStart","push","_Fragment","Text","text","fontSize","RegularPolygon","perfectDrawEnabled","shadow","sides","radius","stroke","strokeWidth","onTap","name","fillAfterStrokeEnabled","opacity","generateMap","ref","map","line","i","Line","tension","lineCap","globalCompositeOperation","paddingLeft","Select","options","mapOptions","onChange","setMapSelection","meta","styles","isSearchable","currentMapNames","_map","defaultMapName","filter","indexOf","nameLoopCount","defaultMapNamesUpdated","newMapName","prompt","setMapOptions","at","user","userName","mapName","DatatablePage","SearchBar","Search","afterSaveCell","oldValue","newValue","column","ToolkitProvider","keyField","columns","search","defaultSearch","searchInput","innerprops","margin","searchProps","onSearch","setSearchInput","srText","BootstrapTable","baseProps","rowStyle","editCellStyle","editorStyle","cellEdit","cellEditFactory","mode","blurToSave","rowClasses","selectRow","expandRow","defaultSorted","host","Lobbies","lobbyColumns","dataField","editable","isDummyField","headerStyle","colum","colIndex","textAlign","formatter","cell","rowIndex","formatExtraData","private","IoLockClosed","size","clickToSelect","clickToEdit","hideSelectColumn","bgColor","onSelect","isSelect","lobbyId","lobby","lobbyName","pw","alert","fetch","method","headers","JSON","stringify","then","response","json","status","setLobbyId","setLobby","setOpenLobbyPanel","roomCode","userID","setShowUserModal","lobbyPW","newID","uuidv4","slice","toUpperCase","lobbies","includes","creatorPlayer","disabled","inProgress","Lobby","refresh","setRefresh","playerListColumns","useNavigate","verticalAlign","players","playerReady","IoCheckmarkCircleOutline","playerSelectRow","_lobby","playerName","lobbyMapSelection","mapLabel","filterOption","candidate","input","setLobbyMapSelection","position","bottom","player","every","GameSession","prevSpace","setPrevSpace","itemTrayPanelOpen","setItemTrayPanelOpen","pathViewPlayer","setPathViewPlayer","radarAnimationEn","setRadarAnimationEn","playerState","pos","PriorityQueue","constructor","this","elements","enqueue","element","priority","sort","a","b","dequeue","shift","isEmpty","hexDistance","x1","y1","x2","y2","dx","abs","dy","dx_dy","max","findShortestPath","startTile","endTile","grid","openSet","cameFrom","Map","gScore","fScore","endX","match","charCodeAt","startX","endY","startY","set","get","currentX","currentY","split","Number","path","has","unshift","XY2Tile","neighbors","getHexNeighbors","neighbor","neighborX","neighborY","tentative_gScore","some","el","directions","dir","nx","ny","generateInaccessibleTile","getRow","getCol","noiseTileSelectEn","setNoiseTile","movement_limit","maxMovement","pathLength","fillRadialGradientStartPoint","fillRadialGradientStartRadius","fillRadialGradientEndPoint","fillRadialGradientEndRadius","fillRadialGradientColorStops","generatePlayerPath","tile_history","uncertainty_r","turnHistory","turn","forEach","Arrow","pointerLength","pointerWidth","pop","Circle","shadowOffset","shadowBlur","playerTableSelectRow","xl","offsetX","listening","currPlayer","playerTurnOrder","updatedLobbyMap","idx","role","playerId","marginLeft","overflowY","overflow","whiteSpace","align","flex","SlidingPanel","type","isOpen","backdropClicked","noBackdrop","paddingBottom","io","App","showUserModal","setUserName","tempUserName","setTempUserName","lobbySearchInput","setLobbySearchInput","setLobbies","openLobbyPanel","mapEditorSelection","setMapEditorSelection","gameCodeId","setGameCodeId","setPlayerState","notificationEvent","setNotificationEvent","newUsernameUnavailable","setNewUsernameUnavailable","setNoiseTileSelectEn","noiseTile","updateToastID","setUpdateToastID","setTurnHistory","setPlayerTurnOrder","setCurrPlayer","lobbyRef","tempUserNameRef","navigate","handleUserModalClose","cached_username","localStorage","getItem","username","safe","dangerous","hspawn","aspawn","escapepod","remove","setItem","replace","turnOrder","audio","getElementById","volume","play","noiseTileToast","state","numHeldCards","playerNumHeldCards","includeSelf","toast","dismiss","update","render","toastId","card","targetPlayer","error","closeOnClick","autoClose","success","warning","closeButton","handleUsernameSave","Navbar","collapseOnSelect","expand","bg","sticky","Toggle","Collapse","Nav","activeKey","pathname","Link","as","NavLink","activeStyle","textDecoration","textDecorationThickness","textUnderlineOffset","exact","to","Brand","marginRight","cursor","IoPersonCircleOutline","Routes","Route","Modal","show","onHide","onKeyDown","key","Header","Title","Body","InputGroup","FormControl","IoPencil","Footer","ToastContainer","newestOnTop","transition","Slide","draggablePercent","loop","autoplay","bgAudioFile","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","Router"],"mappings":"0WAAe,G,aAAA,IAA0B,sC,OCoC1BA,MA9BDC,IAEZC,qBAAU,KACRC,SAASC,KAAKC,MAAMC,gBAAkB,QAE/B,WACHH,SAASC,KAAKC,MAAMC,gBAAkB,SAC1C,IACC,IAWH,OACEC,cAACC,IAAS,CAACC,OAAK,EAAAC,SACdH,cAACI,IAAG,CAACC,GAAG,KAAKP,MAAO,CAACQ,QAAS,OAAQC,eAAgB,UAAUJ,SAC9DK,eAACC,IAAG,CAACJ,GAAG,KAAKP,MAAO,CAACQ,QAAS,OAAQC,eAAgB,UAAUJ,SAAA,CAC9DH,cAAA,OAAKU,IAAKC,EAASC,IAAI,UAAUd,MAAO,CAACe,OAAO,GAADC,OAA0B,GAArBC,OAAOC,YAAkB,MAAMC,MAAO,QAAQ,a,wBC7BrG,MAAMC,EAAkB,CAC3B,QACA,OACA,YACA,QACA,QACA,SACA,SACA,SACA,aACA,UACA,QACA,UACA,WACA,WACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,OACA,OACA,QACA,OACA,OACA,OACA,UACA,SACA,OACA,UACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,SACA,WACA,UACA,SACA,WACA,QACA,SACA,WACA,UACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,YACA,QACA,QACA,OACA,WACA,UACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,QACA,OACA,UACA,MACA,OACA,SACA,OACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,SACA,QACA,SACA,MACA,QACA,SACA,QACA,SACA,MACA,QACA,QACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,OACA,SACA,OACA,OACA,OACA,UACA,OACA,SACA,SACA,MACA,OACA,SACA,OACA,MACA,SC/EOH,OAAOI,SAASC,SA6hBZC,MA3hBf,SAAgB3B,GACd,MAAM4B,OAA8BC,IAAnB7B,EAAM4B,SAAyB5B,EAAM4B,SAAW,IAE1DE,EAAcC,GAAmBC,mBAAS,CAC/C,CAACC,MAAO,WAAYC,MAAO,OAAQC,MAAO,QAASC,SAAU,EA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","file":"static/js/main.77a4896f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hex-bg-2.b3512a1a.png\";","import React, { useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Select from 'react-select';\n\nimport home_bg from './imgs/hex-bg-2.png';\n\nconst Home = (props) => {\n  // Calling the function on component mount\n  useEffect(() => {\n    document.body.style.backgroundColor = 'black';\n\n    return function cleanup() {\n        document.body.style.backgroundColor = '#cccccc';//'#e9e9ea';\n    };\n  }, []);\n\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'transparent !important', \n      boxShadow: 'none',\n    })\n  };\n\n  return (\n    <Container fluid>\n      <Row xs='12' style={{display: 'flex', justifyContent: 'center'}}>\n        <Col xs='12' style={{display: 'flex', justifyContent: 'center'}}>\n          <img src={home_bg} alt=\"home-bg\" style={{height: `${window.innerHeight * 0.90}px`, width: null}}/>; {/* width: `${window.innerWidth}px` */}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","export const defaultMapNames = [\n    'Alula',\n    'Alya',\n    'Andromeda',\n    'Ariel',\n    'Astra',\n    'Astrid',\n    'Aurora',\n    'Bianca',\n    'Cassiopeia',\n    'Celeste',\n    'Ceres',\n    'Columba',\n    'Cordelia',\n    'Cressida',\n    'Elara',\n    'Estella',\n    'Esther',\n    'Europa',\n    'Faye',\n    'Gaia',\n    'Halley',\n    'Juliet',\n    'Larissa',\n    'Leda',\n    'Leia',\n    'Libra',\n    'Luna',\n    'Lyra',\n    'Maia',\n    'Miranda',\n    'Nevaeh',\n    'Nova',\n    'Ophelia',\n    'Pandora',\n    'Phoebe',\n    'Portia',\n    'Rhea',\n    'Sally',\n    'Sidra',\n    'Sitara',\n    'Soleil',\n    'Solstice',\n    'Solveig',\n    'Starla',\n    'Starling',\n    'Starr',\n    'Stella',\n    'Sunshine',\n    'Titania',\n    'Vega',\n    'Venus',\n    'Vesta',\n    'Aldrin',\n    'Altair',\n    'Apollo',\n    'Archer',\n    'Armstrong',\n    'Astro',\n    'Atlas',\n    'Buzz',\n    'Callisto',\n    'Calypso',\n    'Castor',\n    'Comet',\n    'Cosmo',\n    'Cygnus',\n    'Galilei',\n    'Galileo',\n    'Glenn',\n    'Hercules',\n    'Holmes',\n    'Janus',\n    'Jett',\n    'Jupiter',\n    'Leo',\n    'Luke',\n    'Meteor',\n    'Nash',\n    'Neil',\n    'Neptune',\n    'Oberon',\n    'Orion',\n    'Pallas',\n    'Perseus',\n    'Phoenix',\n    'Planet',\n    'Pluto',\n    'Pollux',\n    'Red',\n    'Rigel',\n    'Rocket',\n    'Saros',\n    'Sirius',\n    'Sol',\n    'Solar',\n    'Spock',\n    'Tarique',\n    'Taurus',\n    'Trek',\n    'Vulcan',\n    'Aries',\n    'Eclipse',\n    'Galaxy',\n    'Halo',\n    'Heaven',\n    'Juno',\n    'Mars',\n    'Marz',\n    'Mercury',\n    'Moon',\n    'Saturn',\n    'Shadow',\n    'Sky',\n    'Skye',\n    'Skylar',\n    'Star',\n    'Sun',\n    'Sunny'\n];","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport Konva from \"konva\";\nimport {\n  Stage,\n  Layer,\n  Text,\n  Image,\n  Line,\n  Rect,\n  Circle,\n  RegularPolygon\n} from 'react-konva';\n\nimport {\n  IoPersonCircleOutline,\n  IoPencil\n} from 'react-icons/io5'; // MIT Licensed icons\n\nimport './App.css';\n\nimport Home from './Home';\nimport { defaultMapNames } from './defaultMapNames';\n\n// import safeSpace from 'safe-space';\n// import dangerSpace from 'danger-space';\n\nvar host = window.location.hostname;\n\nfunction Editor(props) {\n  const viewMode = props.viewMode !== undefined ? props.viewMode : '';\n\n  const [spaceOptions, setSpaceOptions] = useState([\n    {label: '1 - Safe', value: 'safe', color: 'white', numTiles: 0, maxTiles: -1},\n    {label: '2 - Dangerous', value: 'dangerous', color: 'grey', numTiles: 0, maxTiles: -1},\n    {label: '3 - Human Spawn', value: 'hspawn', color: 'purple', numTiles: 0, maxTiles: 1},\n    {label: '4 - Alien Spawn', value: 'aspawn', color: 'red', numTiles: 0, maxTiles: 1},\n    {label: '5 - Escape Pod', value: 'escapepod', color: 'orange', numTiles: 0, maxTiles: 4},\n    {label: '6 - Remove', value: 'remove', color: '', numTiles: 0, maxTiles: -1}\n  ]);\n\n  const [toggleDrawingBtnColor, setToggleDrawingBtnColor] = useState('grey');\n  const [currSpace, setCurrSpace] = useState();\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n  // const [newMap, props.setNewMap] = useState({tiles: {}, meta: {}});\n  const [mapEditor, setMapEditor] = useState(viewMode !== 'viewOnly');\n  const [spaceSelector, setSpaceSelector] = useState(spaceOptions[0]);\n  const [sharedAngle, setSharedAngle] = useState(0);\n  const sharedAngleRef = useRef(sharedAngle);\n  // const [mapOptions, setMapOptions] = useState([\n  //   {label: 'New', value: newMap}\n  // ]);\n  // const [mapSelection, setMapSelection] = useState(props.mapOptions[0]);\n\n  document.addEventListener('keydown', function(event) {\n    const keycode = parseInt(event.keyCode);\n    console.log(keycode);\n    if ((keycode >= 49 && keycode <= (48 + spaceOptions.length)) && mapEditor) {\n      console.log('Setting space options');\n      setSpaceSelector(spaceOptions[keycode - 49]);\n    }\n  });\n\n  useEffect(() => {\n    sharedAngleRef.current = sharedAngle;\n  }, [sharedAngle]);\n\n  const updateSharedAngle = () => {\n    setSharedAngle((sharedAngleRef.current + 5) % 360);\n  }\n\n  // client-side\n  useEffect(() => {\n    const intervalId = window.setInterval(updateSharedAngle, 30);\n\n    //setMapEditorMap(generateMapEditor());\n    props.socket.on(\"connect\", () => {  console.log(props.socket.id); });\n    props.socket.on(\"responseMessage\", (data) => {  console.log(data); });\n    // props.socket.on(\"emitMapList\", (data) => {\n    //   let _mapOptions = [...mapOptions];\n    //   setMapOptions([{label: 'New', value: {tiles: [], meta: {safe: 0, dangerous: 0, hspawn: 0, aspawn: 0, escapepod: 0, remove: 0}}}, ...data]);\n    // });\n\n    props.socket.on(\"connect_error\", (err) => {  console.log(`connect_error due to ${err.message}`);});\n    // props.socket.emit('getMapList', {});\n    // Clean up the interval when the component unmounts\n    //return () => clearInterval(intervalId);\n  }, []);\n\n\n  const hexClickHandle = (e, id) => {\n    setCurrSpace(id);\n    props.socket.emit('incoming', {test: id});\n    let updatedMap = {...props.newMap};\n    console.log(spaceSelector.numTiles);\n    console.log(spaceSelector.maxTiles);\n    if (spaceSelector.numTiles === spaceSelector.maxTiles) {\n      const oldTile = Object.keys(props.newMap.tiles).find(tile => props.newMap.tiles[tile].tileType === spaceSelector.value);\n      console.log(oldTile);\n      console.log(e);\n      e.target.getStage().findOne(`#${oldTile}`).setAttrs({\n        fill: 'cyan'\n      });\n      delete updatedMap.tiles[oldTile];\n      delete props.mapSelection.value.tiles[oldTile];\n    } else {\n      const updatedSpaceOptions = [...spaceOptions];\n      const space_id = Object.keys(updatedSpaceOptions).find(space => updatedSpaceOptions[space].value === spaceSelector.value);\n      spaceSelector.numTiles += 1;\n      updatedSpaceOptions[space_id].numTiles = spaceSelector.numTiles;\n      setSpaceOptions(updatedSpaceOptions);\n      console.log(spaceOptions);\n      console.log(spaceSelector);\n    }\n    e.currentTarget.setAttrs({\n      fill: spaceSelector.color\n    });\n\n    updatedMap.tiles[id] = {\n        tileType: spaceSelector.value,\n        color: spaceSelector.color,\n    };\n    props.setNewMap(updatedMap);\n    setUnsavedChanges(true);\n  }\n\n\n  const generateMap = () => {\n    let hexagons = []\n    if (props.mapSelection === null) {\n      return hexagons;\n    }\n\n    for (let row = 1; row < 15; row++) {\n      for (let col = 0; col < 23; col++) {\n        let id = String.fromCharCode(0x41 + col) + (row).toString().padStart(2, '0');\n\n        if (id in props.mapSelection.value.tiles && props.mapSelection.value.tiles[id].tileType !== 'remove') {\n          hexagons.push(\n            <>\n            <Text\n              text={id}\n              fontSize={12}\n              x={26 + (col * (36 + 18))}\n              y={31 + (row * (36 + 27)) + (col % 2)*31}\n            />\n            <RegularPolygon\n              perfectDrawEnabled={false}\n              shadow={false}\n              key={id}\n              id={id}\n              x={36 + (col * (36 + 18))}\n              y={36 + (row * (36 + 27)) + (col % 2)*31}\n              sides={6}\n              radius={36}\n              fill={id === currSpace && viewMode !== 'viewOnly' ? 'green' : props.mapSelection.value.tiles[id].color}\n              stroke='black'\n              strokeWidth={1}\n              onClick={(e) => {setCurrSpace(id); props.socket.emit('incoming', {test: id}); }}\n              onTap={(e) => {setCurrSpace(id); props.socket.emit('incoming', {test: id}); }}\n              //dash={[16, 10]} // apply dashed stroke that is 10px long and 5 pixels apart\n              name={id}\n              fillAfterStrokeEnabled={true}\n              opacity={0.4}\n              rotation={90}\n            />\n            </>\n          );\n        }\n      }\n    }\n\n    return hexagons;\n  }\n\n\n  const generateMapEditor = () => {\n    let hexagons = [];\n\n    for (let row = 1; row < 15; row++) {\n      for (let col = 0; col < 23; col++) {\n        let id = String.fromCharCode(0x41 + col) + (row).toString().padStart(2, '0');\n\n        //if (!(id in Object.values(newMap).filter(tile => tile.tileType === 'remove'))) {\n        if (!(id in props.newMap.tiles && props.newMap.tiles[id].tileType === 'remove')) {\n          hexagons.push(\n            <>\n            <Text\n              text={id}\n              fontSize={12}\n              x={26 + (col * (36 + 18))}\n              y={31 + (row * (36 + 27)) + (col % 2)*31}\n            />\n            <RegularPolygon\n              perfectDrawEnabled={false}\n              shadow={false}\n              key={id}\n              id={id}\n              x={36 + (col * (36 + 18))}\n              y={36 + (row * (36 + 27)) + (col % 2)*31}\n              sides={6}\n              radius={36}\n              fill={id in props.mapSelection.value.tiles ?\n                props.mapSelection.value.tiles[id].color :\n                'cyan'\n              }\n              stroke='black'\n              strokeWidth={1}\n              onClick={(e) => {hexClickHandle(e, id)}}\n              onTap={(e) => {hexClickHandle(e, id)}}\n              //dash={[16, 10]} // apply dashed stroke that is 10px long and 5 pixels apart\n              name={id}\n              fillAfterStrokeEnabled={true}\n              opacity={0.4}\n              rotation={90}\n            />\n            </>\n          );\n        }\n      }\n    }\n\n    return hexagons;\n  }\n\n\n  const [lines, setLines] = React.useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [drawingEnabled, setDrawingEnabled] = useState(false);\n\n  const handleMouseDown = (e) => {\n    setIsDrawing(true);\n    //const pos = e.target.getStage().getPointerPosition();\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = e.target.getStage().getPointerPosition();\n    point = transform.point(point);\n    setLines([...lines, { points: [point.x, point.y] }]);\n  };\n\n  const layerRef = React.useRef();\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if ((!(isDrawing && drawingEnabled)) || lines.length === 0) {\n      return;\n    }\n    const stage = e.target.getStage();\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = stage.getPointerPosition();\n    point = transform.point(point);\n    let lastLine = {points: []};\n    if (lines.length !== 0) {\n      lastLine = lines[lines.length - 1];\n    }\n    // add point\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'grey !important',\n      boxShadow: 'none',\n      marginBottom: '1em',\n    })\n  };\n\n    const lineRef = useRef(null);\n    const [angle, setAngle] = useState(0); // State for the rotation angle\n\n    useEffect(() => {\n      const node = lineRef.current;\n      if (!node) return;\n\n      const animation = new Konva.Animation((frame) => {\n        // Increment the angle\n        let newAngle = angle + 1;\n\n        // Reset angle to 0 if it exceeds 360 for looping\n        if (newAngle > 360) {\n          newAngle = 0;\n        }\n\n        // Update the rotation\n        node.rotation(newAngle);\n\n        // Update the state to reflect the new angle\n        setAngle(newAngle);\n\n        // Redraw the layer\n        node.getLayer().batchDraw(); // Redraw the layer\n      }, node.getLayer()); // Attach the animation to the layer\n\n      animation.start(); // Start the animation\n\n      return () => {\n        animation.stop(); // Stop the animation on component unmount\n      };\n    }, [angle]); // Add angle as a dependency\n    // Calculate the end point of the line based on the angle\n  const radius = 100; // Adjust as needed\n  const endX = 300 + radius * Math.cos(angle * Math.PI / 180);\n  const endY = 300 + radius * Math.sin(angle * Math.PI / 180);\n\n  const [stageScaleX, setStageScaleX] = useState(window.innerWidth < 1000 ? 0.6 : 1);\n  const [stageScaleY, setStageScaleY] = useState(window.innerWidth < 1000 ? 0.6 : 1);\n  return (\n     <Container fluid>\n     {\n        viewMode === 'viewOnly' ?\n          <div /> :\n          <Row>\n            <Button\n              variant='secondary'\n              style={{boxShadow: 'None'}}\n              onClick={() => {\n                if (mapEditor && unsavedChanges) {\n                  if (window.confirm('WARNING: Unsaved changes will be lost. Proceed?')) {\n                    setMapEditor(!mapEditor);\n                  }\n                } else {\n                  setMapEditor(!mapEditor);\n                }\n              }}\n            >\n              {\n                mapEditor ?\n                  <span> View Map </span> :\n                  <span> Map Editor </span> \n              }\n            </Button>\n          </Row>\n      }\n      <Row className='align-items-center'>\n        <Col sm='12' md='9' className='align-items-center'>\n          <Stage\n            pixelRatio={1.5}\n            style={{marginTop: '1em', display: 'flex', justifyContent: 'center'}}\n            //width={viewMode === 'viewOnly' ? '25%' : window.innerWidth * (window.innerWidth < 1000 ? 1 : 0.75)}\n            width={window.innerWidth * (window.innerWidth < 1000 ? 1 : 0.75)}\n            height={window.innerHeight * (window.innerHeight < 700 ? 0.55 : 0.85)}\n            onWheel={(e) => {\n              e.evt.preventDefault();\n              if (e.evt.deltaY > 15 || e.evt.deltaY < 15) {\n                setStageScaleX(stageScaleX - (e.evt.deltaY/250));\n                setStageScaleY(stageScaleX - (e.evt.deltaY/250));\n              }\n            }}\n            scaleX={viewMode === 'viewOnly' ? 0.45 : stageScaleX}\n            scaleY={viewMode === 'viewOnly' ? 0.45 : stageScaleY}\n            onMouseDown={handleMouseDown}\n            onMousemove={handleMouseMove}\n            onTouchStart={handleMouseDown}\n            onTouchmove={handleMouseMove}\n            onMouseup={handleMouseUp}\n            draggable={!drawingEnabled}\n          >\n            <Layer>\n              {\n                mapEditor ? \n                  generateMapEditor() :\n                  //mapEditorMap :\n                  generateMap()\n              }\n              { <>\n{/*              <Circle\n                x={300}\n                y={300}\n                radius={100}\n                stroke=\"pink\"\n                strokeWidth={3}\n              />\n             <Line\n                points={[0, 0, 100, 0]} // Start at center, end calculated based on angle\n                stroke=\"pink\"\n                x={300}\n                y={300}\n                rotation={sharedAngle}\n                strokeWidth={3}\n                shadowBlur={30}\n                shadowOffsetX={10}\n      />*/}\n{/*              <Line\n                ref={lineRef}\n                points={[300, 300, endX, endY]} // Start at center, end calculated based on angle\n                stroke=\"green\"\n                strokeWidth={2}\n                rotation={angle} // Apply rotation based on state\n                //offset={{ x: 0, y: 0 }}\n                //x={300} // Center of rotation (should match the start point)\n                //y={300} // Center of rotation\n              />*/}\n              </>\n              }\n            </Layer>\n            <Layer ref={layerRef}>\n              {lines.map((line, i) => (\n                <Line\n                  key={i}\n                  points={line.points}\n                  stroke=\"#df4b26\"\n                  strokeWidth={5}\n                  tension={0.5}\n                  lineCap=\"round\"\n                  globalCompositeOperation={'source-over'}\n                />\n              ))}\n            </Layer>\n          </Stage>\n        </Col>\n        {\n          viewMode === 'viewOnly' ?\n            <div /> :\n            <Col sm='3' className='align-items-center' style={{paddingLeft: '1em'}}>\n              <Select\n                options={props.mapOptions}\n                value={props.mapSelection}\n                onChange={(e) => {\n                  console.log(e);\n                  props.setMapSelection(e);\n                  props.setNewMap({...e.value});\n                  const updatedSpaceOptions = [...spaceOptions];\n                  updatedSpaceOptions.map((space) => {\n                    console.log(space);\n                    space.numTiles = e.value.meta[space.value];\n                  });\n                  console.log('UPDATED SPACE OPTS META: ');\n                  console.log(updatedSpaceOptions);\n                  setSpaceOptions(updatedSpaceOptions);\n                }}\n                styles={primarySelectStyles}\n              />\n              <Select\n                options={spaceOptions}\n                value={spaceSelector}\n                onChange={(e) => {setSpaceSelector(e);}}\n                styles={primarySelectStyles}\n                isSearchable={false}\n              />\n              <Row>\n                <Col>\n                  <Button\n                    style={{\n                      backgroundColor: toggleDrawingBtnColor,\n                      borderColor: toggleDrawingBtnColor,\n                      boxShadow: 'None',\n                      width: '100%',\n                    }}\n                    onClick={(e) => { setDrawingEnabled(!drawingEnabled); setToggleDrawingBtnColor(toggleDrawingBtnColor === 'grey' ? '#ff6961' : 'grey')}}\n                  >\n                      Toggle Drawing\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    style={{\n                      backgroundColor: 'grey',\n                      borderColor: 'grey',\n                      boxShadow: 'None',\n                      width: '100%',\n                    }} \n                    onClick={(e) => { setLines([]); }}\n                  >\n                      Clear Drawing\n                  </Button>\n                </Col>\n              </Row>\n              <Button\n                style={{\n                  backgroundColor: 'grey',\n                  boxShadow: 'None',\n                  borderColor: 'grey',\n                  width: '100%',\n                  marginTop: '1em'\n                }}\n                onClick={(e) => {\n                  const currentMapNames = props.mapOptions.map((_map) => { return _map.label; } );\n                  let defaultMapName = defaultMapNames.filter(_map => currentMapNames.indexOf(_map) === -1);\n                  let nameLoopCount = 1;\n                  let defaultMapNamesUpdated = defaultMapNames;\n                  while (defaultMapName.length === 0) {\n                    nameLoopCount += 1;\n                    defaultMapNamesUpdated = defaultMapNames.map((_map) => { return `${_map}-${nameLoopCount}` });\n                    defaultMapName = defaultMapNamesUpdated.filter(_map => currentMapNames.indexOf(_map) === -1);\n                  }\n                  const newMapName = prompt('Save new map as: ', `${defaultMapName[0]}`);\n                  if (newMapName !== null) {\n                    let meta = {};\n                    spaceOptions.map((space) => { meta[space.value] = space.numTiles});\n                    console.log(meta);\n                    props.mapOptions.push(\n                      {label: newMapName, value: props.newMap}\n                    );\n                    props.setMapOptions(props.mapOptions);\n                    props.setMapSelection(props.mapOptions.at(-1));\n                    props.socket.emit('save', {'mapName': newMapName, ...props.newMap, meta: meta, user: props.userName});\n                    setUnsavedChanges(false);\n                  }\n                }}\n              >\n                    Save New\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: 'grey',\n                  boxShadow: 'None',\n                  borderColor: 'grey',\n                  width: '100%',\n                  marginTop: '1em'\n                }}\n                onClick={(e) => {\n                  props.socket.emit('save', {mapName: props.mapSelection.label, ...props.newMap, user: props.userName});\n                  props.setMapOptions(props.mapOptions.map((map => {\n                    if (props.mapSelection.label === map.label) {\n                      return {label: props.mapSelection.label, value: props.newMap}\n                    } else {\n                      return map;\n                    }\n                  })));\n                  props.setMapSelection({\n                    ...props.mapSelection,\n                    value: props.newMap\n                  })\n                  setUnsavedChanges(false);\n                }}\n              >\n                  Update\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: 'grey',\n                  boxShadow: 'None',\n                  borderColor: 'grey',\n                  width: '100%',\n                  marginTop: '1em'\n                }}\n                onClick={(e) => {\n                  props.setNewMap({tiles: {}, meta: {}});\n                  const updatedSpaceOptions = [...spaceOptions];\n                  updatedSpaceOptions.map((space) => {\n                    space.numTiles = 0;\n                  });\n                  setSpaceOptions(updatedSpaceOptions);\n                  setUnsavedChanges(false);\n                }}\n              >\n                  Reset\n              </Button>\n            </Col>\n        }\n      </Row>\n    </Container>\n  );\n}\n\nexport default Editor;\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './Table.css';\n\nconst DatatablePage = (props) => {\n  const { SearchBar } = Search;\n  const afterSaveCell = (oldValue, newValue, row, column) => {\n    row.data = newValue;\n  };\n\n  return (\n    <ToolkitProvider\n      keyField={ props.keyField }\n      data={ props.data }\n      columns={ props.columns }\n      search={{\n        defaultSearch: props.searchInput ?\n          props.searchInput :\n          ''\n      }}\n    >\n      {innerprops => (\n        <div style={{margin: '1%'}}>\n        { props.search === true ?\n          <SearchBar\n            { ...innerprops.searchProps }\n            onSearch={(e) => {innerprops.searchProps.onSearch(e); props.setSearchInput(e);}}\n            style={{boxShadow: 'none', borderColor: 'grey'}}\n            srText=''\n          /> :\n          <div />\n        }\n          <hr style={{marginTop: '0.6em'}}/>\n          <BootstrapTable\n            { ...innerprops.baseProps }\n            // rowStyle={{ fontSize: 'small', border: '1px solid black' }}\n            rowStyle={ props.rowStyle } //{{ ...props.rowStyle, fontSize: 'small' }}\n            editCellStyle={{ fontSize: 'small' }}\n            editorStyle={{ fontSize: 'small' }}\n            cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true, afterSaveCell }) }\n            // striped   // Disabled due to expandrow causing visual jumps\n            rowClasses={ props.rowClasses }\n            selectRow={ props.selectRow }\n            expandRow={ props.expandRow }\n            defaultSorted={ props.defaultSorted }\n            ref = { props.ref }\n          />\n        </div>\n      )}\n\n    </ToolkitProvider>\n  );\n}\n\nexport default DatatablePage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport {\n  IoLockClosed\n} from 'react-icons/io5'; // MIT Licensed icons\nimport { v4 as uuidv4 } from 'uuid';\n\nimport DatatablePage from './Table';\n\nimport './App.css';\n\n\nvar host = window.location.hostname;\n\nfunction Lobbies(props) {\n\n  const lobbyColumns=[{\n        dataField: 'lobbyName',\n        text: 'Lobby'\n      }, {\n        dataField: 'lobbyId',\n        text: 'Lobby ID',\n        editable: false\n        //hidden: true\n      }, {\n        dataField: 'numPlayers',\n        text: 'Players'\n      }, {\n        dataField: 'private',\n        text: 'Private',\n        editable: false,\n        isDummyField: true,\n        headerStyle: (colum, colIndex) => {\n         return {width: '5em', textAlign: 'center'}\n        },\n        formatter: (cell, row, rowIndex, formatExtraData) => {\n          if (row.private) {\n            return (\n              <IoLockClosed size={18} />\n            );\n          } else {\n            return (<div />);\n          }\n        }\n      }\n  ];\n\n\n  const selectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    clickToEdit: false,\n    hideSelectColumn: true,\n    bgColor: `var(--uap-color-primary)`,\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (props.userName === '') {\n        props.setShowUserModal(true);\n\n        return;\n      }\n\n      if (props.lobbyId !== '') {\n        if (props.lobbyId === row.lobbyId) {\n          return;\n        }\n        if (!window.confirm(`Change from Lobby:\\n\\t${props.lobby.lobbyName}\\nto Lobby\\n\\t${row.lobbyName} ?`)) {\n          return;\n        }\n      }\n\n      if (row.private) {\n        var pw = prompt(\"Please enter this lobby's password\");\n        if (pw === null) {\n          alert('Nothing was entered');\n          return;\n        }\n\n        var url = 'http://' + host + ':5069/check_lobby_password';\n\n        fetch(url, {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n          },\n          //signal: controller.signal,\n          body: JSON.stringify({lobbyId: row.lobbyId, pw: pw})\n        })\n          .then(response => response.json())\n          .then(data => {\n            if (data.status) {\n              props.setLobbyId(row.lobbyId);\n              props.setLobby(row);\n              props.setOpenLobbyPanel(true);\n\n              props.socket.emit('joinLobby', {roomCode: row.lobbyId, lobbyName: row.lobbyName, userID: props.userName});\n            } else {\n              alert('Incorrect password');\n            }\n          });\n\n        return;\n      }\n\n      props.setLobbyId(row.lobbyId);\n      props.setLobby(row);\n      props.setOpenLobbyPanel(true);\n\n      props.socket.emit('joinLobby', {roomCode: row.lobbyId, lobbyName: row.lobbyName, userID: props.userName});\n    }\n  };\n\n\n  return (\n    <Container>\n      <br />\n      <Row className='justify-content-center'>\n        <Col className='justify-content-center d-flex'>\n          <h1> Lobbies </h1>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col xs='3' className='justify-content-center'>\n          <Button\n            className='primaryButton'\n            onClick={() => {\n              if (props.userName === '') {\n                props.setShowUserModal(true);\n\n                return;\n              }\n\n              const lobbyName = prompt('Lobby Name');\n\n              if (lobbyName === null) {\n                return;\n              }\n\n              const lobbyPW   = prompt('Password [leave blank for public lobby]');\n              var newID = uuidv4().slice(-6).toUpperCase(); //Math.random().toString(36).substr(2, 6).toUpperCase();\n\n              while(props.lobbies.map((lobby) => lobby.lobbyId).includes(newID)) {\n                newID = uuidv4().slice(-6).toUpperCase(); //Math.random().toString(36).substr(2, 6).toUpperCase();\n              }\n\n              props.setLobbyId(newID);\n              props.setOpenLobbyPanel(true);\n\n              props.socket.emit('createLobby', {\n                lobbyId: newID,\n                lobbyName: lobbyName,\n                lobbyPW: lobbyPW,\n                creatorPlayer: props.userName\n              });\n            }}\n          >\n            Create Lobby\n          </Button>\n        </Col>\n        <Col xs='3' className='justify-content-center'>\n          <Button\n            className='primaryButton'\n            onClick={() => {\n              console.log(prompt('Lobby ID: '));\n            }}\n            disabled={true}\n          >\n            Join Lobby By ID\n          </Button>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col className=' d-flex justify-content-start'>\n          <DatatablePage\n            keyField='lobbyId'\n            columns={lobbyColumns}\n            data={props.lobbies.filter(function(lobby) { return !lobby.inProgress })}\n            search={true}\n            searchInput={props.searchInput}\n            setSearchInput={props.setSearchInput}\n            selectRow={selectRow}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Lobbies;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport {\n  IoCheckmarkCircleOutline\n} from 'react-icons/io5'; // MIT Licensed icons\nimport { v4 as uuidv4 } from 'uuid';\n\nimport DatatablePage from './Table';\nimport Editor from './Editor';\n\nimport './App.css';\n\nvar host = window.location.hostname;\n\nfunction Lobby(props) {\n  const [refresh, setRefresh] = useState(false);\n\n  const navigate = useNavigate();\n\n  const playerListColumns = [{\n      dataField: 'playerName',\n      text: 'Player',\n      editable: false,\n      style: {\n        verticalAlign: 'middle',\n        fontSize: '1.25em'\n      },\n    }, {\n      dataField: 'playerReady',\n      text: 'Ready',\n      editable: false,\n      isDummyField: true,\n      headerStyle: (colum, colIndex) => {\n       return {width: '5em', textAlign: 'center'}\n      },\n      formatExtraData: props.lobby,\n      formatter: (cell, row, rowIndex, formatExtraData) => {\n        if (formatExtraData.players[rowIndex].playerReady) {\n          return (\n            <IoCheckmarkCircleOutline size={24} color={'green'}/>\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  ];\n\n  const playerSelectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    clickToEdit: false,\n    hideSelectColumn: true,\n    // bgColor: 'green',\n    onSelect: (row, isSelect, rowIndex, e) => {\n      console.log(row);\n      console.log(rowIndex);\n      var _lobby = {...props.lobby};\n\n      if (_lobby.players[rowIndex].playerName === props.userName) {\n        setRefresh(true);\n        _lobby.players[rowIndex].playerReady = !_lobby.players[rowIndex].playerReady;\n        props.socket.emit('registerPlayerReadyState', {playerName: props.userName, playerReady: _lobby.players[rowIndex].playerReady, lobbyId: _lobby.lobbyId});\n      }\n    }\n  };\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'transparent !important',\n      boxShadow: 'none',\n    })\n  };\n\n\n  useEffect(() => {\n    if (refresh) {\n      setRefresh(false);\n    }\n  }, [refresh]);\n\n\n  if (props.lobby === undefined) { return (<div/>) } else {\n  return (\n    <Container>\n      <br />\n      <Row className='justify-content-center'>\n        <Col className='justify-content-center d-flex'>\n          <h1> Lobby </h1>\n        </Col>\n        <hr />\n      </Row>\n\n      <Row className='justify-content-center'>\n        <Col className=' d-flex justify-content-center'>\n          <h2>\n            {props.lobby !== undefined ? props.lobby.lobbyName : ''}\n          </h2>\n        </Col>\n      </Row>\n      <Row className='justify-content-center' style={{height: '5em'}}>\n        <Col xs='2' className=' d-flex justify-content-center'>\n          <h4> Map Selection: </h4>\n        </Col>\n        {\n          props.userName === props.lobby.host ?\n        <Col xs='6' className='justify-content-center'>\n          <Select\n            options={props.mapOptions}\n            value={props.lobbyMapSelection}\n            //value={props.mapOptions.filter((map) => map.label === props.lobby.mapLabel)[0]}\n            onChange={(e) => {\n              //props.setLobbyMapSelection(e);\n              props.socket.emit('setLobbyMap', {lobbyId: props.lobbyId, mapLabel: e.label})\n            }}\n            filterOption={(candidate, input) => {\n              if (candidate.label !== 'New') {\n                return true;\n              } else {\n                return false;\n              }\n            }}\n            styles={primarySelectStyles}\n          />\n          </Col> : \n          <Col xs='6'>\n            <span style={{display: 'inline', verticalAlign: 'middle', fontSize: '1.5em', color: 'red'}}> Must be lobby host to edit map </span>\n          </Col>\n        }\n        <Col xs='4' className='d-flex justify-content-center' style={{width: '30%'}}>\n          { props.lobby.mapLabel !== '' ?\n          <Editor\n              userName={props.userName}\n              newMap={props.newMap}\n              setNewMap={props.setNewMap}\n              mapOptions={props.mapOptions}\n              setMapOptions={props.setMapOptions}\n              viewMode={'viewOnly'}\n              //mapSelection={props.lobbyMapSelection}\n              mapSelection={props.mapOptions.filter((map) => map.label === props.lobby.mapLabel)[0]}\n              setMapSelection={props.setLobbyMapSelection}\n              socket={props.socket}\n          /> :\n          <div />\n        }\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs='6'>\n        { refresh ?\n          <div /> :\n          <DatatablePage\n            keyField='playerName'\n            columns={playerListColumns}\n            data={props.lobby.players}\n            selectRow={playerSelectRow}\n          />\n        }\n        </Col>\n      </Row>\n\n      <Row className='d-flex justify-content-center' style={{position: 'fixed', bottom: '5em', width: '50vw'}}>\n        <Col className=' d-flex justify-content-center'>\n          <Button\n            className='warningButton'\n            style={{marginTop: '1em'}}\n            onClick={() => {\n              props.socket.emit('leaveLobby', {roomCode: props.lobbyId, player: props.lobby.players.filter((player) => player.playerName === props.userName)[0]});\n              props.setOpenLobbyPanel(false);\n              props.setLobbyId('');\n            }}\n          >\n            Leave Lobby\n          </Button>\n        </Col>\n      </Row>\n\n      {\n        props.lobby.players.every((player) => player.playerReady === true) && props.lobby.mapLabel !== '' ?\n          <Row className='d-flex justify-content-center' style={{position: 'fixed', bottom: '2em', width: '50vw'}}>\n            <Col xs='8' className='d-flex justify-content-center'>\n              <Button\n                className='primaryButton'\n                style={{marginTop: '1em', width: '100%'}}\n                onClick={() => {\n                  //props.setOpenLobbyPanel(false);\n                  //let newGameId = uuidv4().slice(-6).toUpperCase();\n                  //navigate(`/gamesession/${props.lobby.lobbyId}`, {replace: true});\n                  //props.setGameCodeId(newGameId);\n                  props.socket.emit('gameStart', {players: props.lobby.players, 'roomCode': props.lobby.lobbyId});\n                }}\n              >\n                Start Game\n              </Button>\n            </Col>\n          </Row> :\n          <div />\n      }\n    </Container>\n  );}\n}\n\nexport default Lobby;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport Konva from \"konva\";\nimport {\n  Stage,\n  Layer,\n  Text,\n  Image,\n  Line,\n  Rect,\n  Circle,\n  Arrow,\n  RegularPolygon,\n} from 'react-konva';\n\nimport {\n  IoPersonCircleOutline,\n  IoPencil,\n  IoCaretUp,\n  IoCaretDown\n} from 'react-icons/io5'; // MIT Licensed icons\nimport DatatablePage from './Table';\nimport SlidingPanel from 'react-sliding-side-panel';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport './App.css';\n\nimport Home from './Home';\nimport { defaultMapNames } from './defaultMapNames';\n\nvar host = window.location.hostname;\n\nfunction GameSession(props) {\n  const [spaceOptions, setSpaceOptions] = useState([\n    {label: '1 - Safe', value: 'safe', color: 'white', numTiles: 0, maxTiles: -1},\n    {label: '2 - Dangerous', value: 'dangerous', color: 'grey', numTiles: 0, maxTiles: -1},\n    {label: '3 - Human Spawn', value: 'hspawn', color: 'purple', numTiles: 0, maxTiles: 1},\n    {label: '4 - Alien Spawn', value: 'aspawn', color: 'red', numTiles: 0, maxTiles: 1},\n    {label: '5 - Escape Pod', value: 'escapepod', color: 'orange', numTiles: 0, maxTiles: 4},\n    {label: '6 - Remove', value: 'remove', color: '', numTiles: 0, maxTiles: -1}\n  ]);\n\n  const [toggleDrawingBtnColor, setToggleDrawingBtnColor] = useState('grey');\n  const [currSpace, setCurrSpace] = useState();\n  const [prevSpace, setPrevSpace] = useState();\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n  const [spaceSelector, setSpaceSelector] = useState(spaceOptions[0]);\n  const [itemTrayPanelOpen, setItemTrayPanelOpen] = useState(false);\n  const [pathViewPlayer, setPathViewPlayer] = useState('');\n  const [sharedAngle, setSharedAngle] = useState(0);\n  const [radarAnimationEn, setRadarAnimationEn] = useState(false);\n\n  const uncertaintyCircleRef      = useRef();\n  const uncertaintyCircleRefOuter = useRef();\n  const sharedAngleRef = useRef(sharedAngle);\n\n  // const animateCircle = () => {\n  //   if (uncertaintyCircleRef.current) {\n  //     const currentX = uncertaintyCircleRef.current.x();\n  //     const currentY = uncertaintyCircleRef.current.y();\n  //     const currentR = uncertaintyCircleRefOuter.current.radius();\n\n  //     uncertaintyCircleRef.current.radius = currentR;\n\n  //     new Konva.Tween({\n  //       node: uncertaintyCircleRef.current,\n  //       duration: 1, // seconds\n  //       x: currentX,      // target x position\n  //       y: currentY,\n  //       radius: 0,\n  //       fill: 'pink', // target fill color\n  //       opacity: 0.5,\n  //       easing: Konva.Easings.StrongEaseOut, // easing function\n  //       onFinish: animateCircle\n  //     }).play();\n  //   }\n  // };\n\n  // document.addEventListener('keydown', function(event) {\n  //   const keycode = parseInt(event.keyCode);\n  //   if ((keycode >= 49 && keycode <= (48 + spaceOptions.length)) && mapEditor) {\n  //     console.log('Setting space options');\n  //     setSpaceSelector(spaceOptions[keycode - 49]);\n  //   }\n  // });\n\n  // client-side\n  useEffect(() => {\n    props.socket.on(\"connect\", () => {  console.log(props.socket.id); });\n    props.socket.on(\"responseMessage\", (data) => {  console.log(data); });\n    props.socket.on(\"connect_error\", (err) => {  console.log(`connect_error due to ${err.message}`);});\n\n    if (radarAnimationEn) {\n      const intervalId = window.setInterval(() => {setSharedAngle(sharedAngleRef.current + 5)}, 30);\n    }\n  }, []);\n\n  useEffect(() => {\n    sharedAngleRef.current = sharedAngle;\n  }, [sharedAngle]);\n\n\n  useEffect(() => {\n    if (props.playerState !== undefined) {\n      setCurrSpace(props.playerState.pos);\n      setPrevSpace(props.playerState.pos);\n    }\n  }, [props.playerState]);\n\n\n  const XY2Tile = (x, y) => {\n    return `${String.fromCharCode('A'.charCodeAt(0) + x)}${y.toString().padStart(2, '0')}`;\n  }\n\n\n  /**************************************************/\n    class PriorityQueue {\n      constructor() {\n          this.elements = [];\n      }\n\n      enqueue(element, priority) {\n          this.elements.push({ element, priority });\n          this.elements.sort((a, b) => a.priority - b.priority);\n      }\n\n      dequeue() {\n          return this.elements.shift().element;\n      }\n\n      isEmpty() {\n          return this.elements.length === 0;\n      }\n  }\n\n  const hexDistance = (x1, y1, x2, y2) => {\n      // Adjust y coordinates for odd columns\n      if (x1 % 2 !== 0 && x2 % 2 !== 0) {\n          y1 -= 1;\n          y2 -= 1;\n      } else if (x1 % 2 === 0 && x2 % 2 === 0) {\n          y1 += 1;\n          y2 += 1;\n      }\n\n      let dx = Math.abs(x2 - x1);\n      let dy = Math.abs(y2 - y1);\n      let dx_dy = Math.abs(dx - dy);\n\n      return Math.max(dx, dy, dx_dy);\n  }\n\n  const findShortestPath = (startTile, endTile, grid) => {\n      // A* algorithm implementation\n      let openSet = new PriorityQueue();\n      let cameFrom = new Map();\n      let gScore = new Map();\n      let fScore = new Map();\n\n      const endX = endTile.match(/\\D/g)[0].charCodeAt(0) - 'A'.charCodeAt(0);\n      const startX = startTile.match(/\\D/g)[0].charCodeAt(0) - 'A'.charCodeAt(0);\n      const endY = parseInt(endTile.match(/\\d+/g)[0]);\n      const startY = parseInt(startTile.match(/\\d+/g)[0]);\n\n      gScore.set(`${startX},${startY}`, 0);\n      fScore.set(`${startX},${startY}`, hexDistance(startX, startY, endX, endY));\n\n      openSet.enqueue(`${startX},${startY}`, fScore.get(`${startX},${startY}`));\n\n      while (!openSet.isEmpty()) {\n          let current = openSet.dequeue();\n          let [currentX, currentY] = current.split(',').map(Number);\n\n          if (currentX === endX && currentY === endY) {\n              // Found the end point, reconstruct path\n              let path = [];\n              while (cameFrom.has(`${currentX},${currentY}`)) {\n                  path.unshift([currentX, currentY]);\n                  [currentX, currentY] = cameFrom.get(`${currentX},${currentY}`);\n              }\n              path.unshift([startX, startY]);\n              return path.map((tile) => {return XY2Tile(tile[0], tile[1])});\n          }\n\n          let neighbors = getHexNeighbors(currentX, currentY, grid);\n\n          for (let neighbor of neighbors) {\n              let [neighborX, neighborY] = neighbor;\n\n              let tentative_gScore = gScore.get(`${currentX},${currentY}`) + 1;\n\n              if (!gScore.has(`${neighborX},${neighborY}`) || tentative_gScore < gScore.get(`${neighborX},${neighborY}`)) {\n                  // Found a better path to the neighbor\n                  cameFrom.set(`${neighborX},${neighborY}`, [currentX, currentY]);\n                  gScore.set(`${neighborX},${neighborY}`, tentative_gScore);\n                  fScore.set(`${neighborX},${neighborY}`, tentative_gScore + hexDistance(neighborX, neighborY, endX, endY));\n\n                  if (!openSet.elements.some(el => el.element === `${neighborX},${neighborY}`)) {\n                      openSet.enqueue(`${neighborX},${neighborY}`, fScore.get(`${neighborX},${neighborY}`));\n                  }\n              }\n          }\n      }\n\n      // No path found\n      return null;\n  }\n\n  const getHexNeighbors = (x, y, grid) => {\n      let neighbors = [];\n      let directions = [];\n\n      if (x % 2 === 1) {\n        /* Adjust for even/odd columns */\n        /* Odd columns share the same row number as the tiles diagonally above them */\n        directions = [\n            [1, 0], [1, 1], [0, 1],\n            [-1, 1], [-1, 0], [0, -1]\n        ];\n      } else {\n        directions = [\n            [1, 0], [0, 1], [-1, 0],\n            [-1, -1], [0, -1], [1, -1]\n        ];\n      }\n\n      for (let dir of directions) {\n          let nx = x + dir[0];\n          let ny = y + dir[1];\n\n          let tile = `${String.fromCharCode('A'.charCodeAt(0) + nx)}${ny.toString().padStart(2, '0')}`;\n\n          if (Object.keys(grid).includes(tile) && props.mapSelection.value.tiles[tile].status !== 'inaccessible') {\n            neighbors.push([nx, ny]);\n          }\n      }\n\n      return neighbors;\n  }\n\n\n  const generateInaccessibleTile = (tile) => {\n    let x = getRow(tile);\n    let y = getCol(tile);\n\n    let pointOffsetX = -32; //(x % 2 === 0) ? -32 : -30;\n    let pointOffsetY = -6; //(y % 2 === 0) ? -6   : -6;\n    let rotation     = 27; //(x % 2 === 0) ? 27 : 27;\n\n    return (\n      <>\n       <Line\n        points = {[pointOffsetX, pointOffsetY, 28, 0]}\n         // points={[pointOffsetX, pointOffsetY, 32 + pointOffsetY, 0]} // Start at center, end calculated based on angle\n          stroke={'black'}\n          x={x}\n          y={y}\n          rotation={rotation}\n          opacity={0.6}\n          strokeWidth={2}\n        /> \n{/*        <Line\n          points = {[pointOffsetX+4, pointOffsetY, 30, 0]}\n        //  points={[pointOffsetX - pointOffsetY, pointOffsetY, pointOffsetX*(-1), 0]} // Start at center, end calculated based on angle\n          stroke={'black'}\n          x={x}\n          y={y}\n          rotation={360-rotation}\n          opacity={0.6}\n          strokeWidth={2}\n        /> */}\n      </>\n    );\n  }\n\n\n  const hexClickHandle = (e, id) => {\n    if (props.noiseTileSelectEn) {\n      props.setNoiseTile(id);\n    } else {\n      const new_x = id.match(/\\D/g)[0].charCodeAt(0);\n      const old_x = currSpace.match(/\\D/g)[0].charCodeAt(0);\n      const new_y = parseInt(id.match(/\\d+/g)[0]);\n      const old_y = parseInt(currSpace.match(/\\d+/g)[0]);\n\n      let path = findShortestPath(prevSpace, id, props.mapSelection.value.tiles);\n\n      let dx = new_x - old_x;\n      let dy = new_y - old_y;\n\n      const movement_limit = props.playerState.maxMovement;\n\n      if (path !== null && ((path.length - 1) <= movement_limit)) {\n        setCurrSpace(id);\n      }\n    }\n  }\n\n\n  const generateMap = () => {\n    if (prevSpace === undefined) { return []; } \n    let hexagons = []\n\n    for (let row = 1; row < 15; row++) {\n      for (let col = 0; col < 23; col++) {\n        let id = String.fromCharCode(0x41 + col) + (row).toString().padStart(2, '0');\n\n        if (id in props.mapSelection.value.tiles && props.mapSelection.value.tiles[id].tileType !== 'remove') {\n          let pathLength = findShortestPath(prevSpace, id, props.mapSelection.value.tiles);\n          pathLength = (pathLength === null) ? 0 : pathLength.length - 1;\n          hexagons.push(\n            <>\n            <Text\n              text={id}\n              fontSize={12}\n              x={26 + (col * (36 + 18))}\n              y={31 + (row * (36 + 27)) + (col % 2)*31}\n            />\n            <RegularPolygon\n              perfectDrawEnabled={false}\n              shadow={false}\n              key={id}\n              id={id}\n              x={36 + (col * (36 + 18))}\n              y={36 + (row * (36 + 27)) + (col % 2)*31}\n              sides={6}\n              radius={36}\n              //fill={id === currSpace ? 'green' : props.mapSelection.value.tiles[id].color}\n\n              fillRadialGradientStartPoint={{ x: 0, y: 0 }}\n              fillRadialGradientStartRadius={12}\n              fillRadialGradientEndPoint= {{ x: 0, y: 0 }}\n              fillRadialGradientEndRadius={50}\n              fillRadialGradientColorStops= {[\n                0,\n                props.mapSelection.value.tiles[id].color,\n                0.5,\n                (id === currSpace) ?\n                  '#51ff0d' :\n                  (id === prevSpace && currSpace !== prevSpace) ?\n                    'blue' :\n                    (pathLength > 0 && pathLength <= props.playerState.maxMovement) ? 'yellow' :\n                    props.mapSelection.value.tiles[id].color\n              ]}\n\n              stroke={'black'}\n              strokeWidth={1}\n              onClick={(e) => { hexClickHandle(e, id); }}\n              onTap={(e) => {hexClickHandle(e, id); }}\n              name={id}\n              fillAfterStrokeEnabled={true}\n              opacity={0.50}\n              rotation={90}\n            />\n            {\n              //props.mapSelection.value.tiles[id].tileType === 'escapepod' ?\n              props.mapSelection.value.tiles[id].status === 'inaccessible' ?\n                generateInaccessibleTile(id)\n              // <>\n              //  <Line\n              //     points={[-34, -3, 29, 0]} // Start at center, end calculated based on angle\n              //     stroke={'black'}\n              //     x={getRow(id)}\n              //     y={getCol(id)}\n              //     rotation={33}\n              //     strokeWidth={2}\n              //   /> \n              //   <Line\n              //     points={[-29, -4, 34, 0]} // Start at center, end calculated based on angle\n              //     stroke={'black'}\n              //     x={getRow(id)}\n              //     y={getCol(id)}\n              //     rotation={360-33}\n              //     strokeWidth={2}\n              //   /> \n              // </>\n                :\n                <div/>\n            }\n            </>\n          );\n        }\n      }\n    }\n\n    return hexagons;\n  }\n\n\n  const [lines, setLines] = React.useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [drawingEnabled, setDrawingEnabled] = useState(false);\n\n  const handleMouseDown = (e) => {\n    setIsDrawing(true);\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = e.target.getStage().getPointerPosition();\n    point = transform.point(point);\n    setLines([...lines, { points: [point.x, point.y] }]);\n  };\n\n  const layerRef = React.useRef();\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if ((!(isDrawing && drawingEnabled)) || lines.length === 0) {\n      return;\n    }\n    const stage = e.target.getStage();\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = stage.getPointerPosition();\n    point = transform.point(point);\n    let lastLine = {points: []};\n    if (lines.length !== 0) {\n      lastLine = lines[lines.length - 1];\n    }\n    // add point\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n \n\n  const generatePlayerPath = () => {\n    var path = [];\n    var tile_history = [];\n    let uncertainty_r = 0;\n\n    props.turnHistory.filter(function(turn) {return turn.player === pathViewPlayer}).forEach((turn) => {\n      if (turn.tile !== '-') {\n        if (tile_history.length > 0) { \n          let prevSpace = tile_history[tile_history.length - 1];\n          path.push(\n            <Arrow\n              points={[getRow(prevSpace), getCol(prevSpace), getRow(turn.tile), getCol(turn.tile)]}\n              pointerLength={10}\n              pointerWidth={4}\n              fill='cyan'\n              stroke='cyan'\n              strokeWidth={2}\n              opacity={0.7}\n            />\n          );\n        }\n\n        tile_history.push(turn.tile);\n        uncertainty_r = 0;\n      } else if (tile_history.length > 0) {\n        let prevSpace = tile_history[tile_history.length - 1];\n\n        uncertainty_r += 1;\n\n        if (uncertainty_r > 1) {\n          path.pop();\n        }\n\n        path.push(\n          <>\n          <Circle\n            x={getRow(prevSpace)}\n            y={getCol(prevSpace)}\n            radius={72 * uncertainty_r}\n            strokeWidth={3}\n            stroke={'pink'}\n            // ref={uncertaintyCircleRefOuter}\n            // fill={'rgba(66, 245, 245, 0.0)'}\n          />\n          { radarAnimationEn ?\n             <Line\n                points={[0, 0, 72 * uncertainty_r, 0]} // Start at center, end calculated based on angle\n                stroke={'pink'}\n                x={getRow(prevSpace)}\n                y={getCol(prevSpace)}\n                rotation={sharedAngle}\n                strokeWidth={2}\n                shadowOffset={15}\n                shadowBlur={30}\n              /> :\n              <div />\n          }\n          </>\n        );\n      //  animateCircle();\n      }\n    });\n\n    return path;\n  }\n\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'grey !important',\n      boxShadow: 'none',\n      marginBottom: '1em',\n    })\n  };\n\n  const playerTableSelectRow = {\n    mode: 'radio',\n    hideSelectColumn: true,\n    clickToSelect: true,\n    clickToEdit: false,\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (row.player === pathViewPlayer) {\n        setPathViewPlayer('');\n      } else {\n        setPathViewPlayer(row.player);\n      }\n    }\n  };\n\n  const getRow = (id) => {\n    var col = (id.match('[A-Z]')[0].charCodeAt(0) - 'A'.charCodeAt(0));\n    return 36 + (col*(36+18));\n  };\n\n  const getCol = (id) => {    \n    var row = parseInt(id.match('[0-9]+')[0]);\n    var col = (id.match('[A-Z]')[0].charCodeAt(0) - 'A'.charCodeAt(0));\n    console.log(col);\n    var col_adjust_const = (col % 2 === 0) ? 3 : 36;\n    var ret = 36 + (row * (36+27)) + col_adjust_const;\n\n    return ret;\n  };\n\n  const [stageScaleX, setStageScaleX] = useState(1.5);\n  const [stageScaleY, setStageScaleY] = useState(1.5);\n  if (props.playerState === undefined) {\n    return (<div />);\n  } else {\n    return (\n      <>\n        <Container fluid>\n        <Row className='d-flex' style={{height: '60vh'}}>\n          <Col xs='8' xl='8' className='align-items-center d-flex' style={{height: '75vh'}}>\n            <Stage\n              pixelRatio={1.5}\n              style={{marginTop: '1em', display: 'flex', justifyContent: 'center'}}\n              width={window.innerWidth * 0.65}  // 10/12 col width\n              height={window.innerWidth > 1400 ? window.innerHeight * 0.85 : window.innerHeight * 0.60}\n              onWheel={(e) => {\n                e.evt.preventDefault();\n                if (e.evt.deltaY > 15 || e.evt.deltaY < 15) {\n                  setStageScaleX(stageScaleX - (e.evt.deltaY/250));\n                  setStageScaleY(stageScaleX - (e.evt.deltaY/250));\n                }\n              }}\n              // scaleY={viewMode === 'viewOnly' ? 0.45 : stageScaleY}\n              // scaleX={viewMode === 'viewOnly' ? 0.45 : stageScaleX}\n              scaleY={stageScaleY}\n              scaleX={stageScaleX}\n              onMouseDown={handleMouseDown}\n              onMousemove={handleMouseMove}\n              onTouchStart={handleMouseDown}\n              onTouchmove={handleMouseMove}\n              onMouseup={handleMouseUp}\n              draggable={!drawingEnabled}\n              offsetX={window.innerWidth / 10}\n              //offsetX={window.innerWidth / 10}\n            >\n              <Layer>\n              {\n                generateMap()\n              }\n              </Layer>\n              <Layer listening={false}>\n              {currSpace !== prevSpace ?\n                  <Arrow\n                    points={[getRow(prevSpace), getCol(prevSpace), getRow(currSpace), getCol(currSpace)]}\n                    pointerLength={10}\n                    pointerWidth={4}\n                    fill='black'\n                    stroke='black'\n                    strokeWidth={2}\n                    opacity={0.7}\n                  /> :\n                  <div />\n                }\n              </Layer>\n              <Layer listening={false}>\n              {generatePlayerPath()}\n              </Layer>\n              <Layer ref={layerRef}>\n                {lines.map((line, i) => (\n                  <Line\n                    key={i}\n                    points={line.points}\n                    stroke=\"#df4b26\"\n                    strokeWidth={5}\n                    tension={0.5}\n                    lineCap=\"round\"\n                    globalCompositeOperation={'source-over'}\n                  />\n                ))}\n              </Layer>\n            </Stage>\n          </Col>\n          <Col xs='4' xl='4'>\n            <Row xs='12'>\n              <Col xs='12'>\n            {/*<div style={{position: 'absolute', top: '5em'}}>*/}\n                <DatatablePage\n                  keyField='player'\n                  rowStyle={(row, rowIndex) => {\n                    // let bgColor = 'inherit';\n\n                    // if (props.players)\n                    return {backgroundColor: row.player === props.currPlayer ? `var(--color-primary)` : 'inherit'}; \n                  }}\n                  columns={[\n                    {dataField: 'player', text: 'Player'\n                  }]}\n                  //data={props.lobby.players.map((player) => { return {'player': player.playerName}})}\n                  data={props.playerTurnOrder.map((player) => { return {'player': player}; })}\n                />\n{/*            </div>*/}\n              </Col>\n            </Row>\n            <Row xs='12'>\n              <Col xs='12'>\n              { props.currPlayer === props.userName ?\n                  <Button\n                    className='primaryButton'\n                    onClick={(e) => {\n                      if (props.turnHistory.filter(function(turn) {return turn.player === props.currPlayer}).length === 0) {\n                        // This was turn one, disable access to spawn point from here on out\n                        let updatedLobbyMap = {...props.mapSelection};\n                       // updatedLobbyMap.value.tiles[prevSpace].status = 'inaccessible'; \n\n                        Object.keys(updatedLobbyMap.value.tiles).forEach((tile, idx) => {\n                          let tileType = updatedLobbyMap.value.tiles[tile].tileType;\n                          if (tileType === 'aspawn' || tileType === 'hspawn') {\n                            updatedLobbyMap.value.tiles[tile].status = 'inaccessible';\n                          }\n                          if (tileType === 'escapepod' && props.playerState.role === 'alien') {\n                            updatedLobbyMap.value.tiles[tile].status = 'inaccessible';\n                          }\n                        });\n                        props.setMapSelection(updatedLobbyMap);\n                      }\n                      setPrevSpace(currSpace);\n                      props.socket.emit('turnSubmit', {\n                        tile: currSpace,\n                        tileType: props.mapSelection.value.tiles[currSpace].tileType,\n                        lobbyId: props.lobby.lobbyId,\n                        playerId: props.userName\n                      });\n                    }}\n                    disabled={currSpace === prevSpace}\n                    style={{width: '90%', marginTop: '0em', marginLeft: '0em', borderColor: 'grey', backgroundColor: currSpace === prevSpace ?  `var(--color-warning)` : `var(--color-primary)`}}\n                  >\n                    {currSpace === prevSpace ? \"Must Move\" : \"End Turn\"}\n                  </Button> :\n                  <div />\n              }\n              </Col>\n            </Row>\n            { (window.innerWidth > 1400) ? \n              <Row xs='12'>\n                <Col xs='12' style={{overflowY: 'auto', height: '45vh'}}>\n                  <DatatablePage\n                    keyField='turn'\n                    rowStyle={(row, rowIndex) => {\n                      let bgColor = 'inherit';\n\n                      if (row.event === 'attack') {\n                        bgColor = `var(--color-danger)`;\n                      } else if (row.player === pathViewPlayer) { // Attack bgColor takes precedence\n                        bgColor = `var(--color-info)`;\n                      }\n                      return {backgroundColor: bgColor};\n                    }}\n                    selectRow={playerTableSelectRow}\n                    columns={[\n                      {dataField: 'turn', text: 'Turn', sort: true, editable: false},\n                      { dataField: 'player',\n                        text: 'Player',\n                        sort: true,\n                        // sortFunc: (a, b, order, dataField, rowA, rowB) => {\n                        //   // Your custom sorting logic here\n                        //   // let playerA = a.split(' -> ')[0];\n                        //   // let playerB = b.split(' -> ')[0];\n                        //   a = a.split(' -> ')[0];\n                        //   b = b.split(' -> ')[0];\n                        //   console.log(a);\n                        //   console.log(b);\n\n                        //   if (order === 'asc') {\n                        //     return b - a;\n                        //   }\n                        //   return a - b; \n                        // },\n                        editable: false,\n                        style: {overflow: 'hidden', whiteSpace: 'nowrap'}\n                      },\n                      {dataField: 'tile', text: 'tile', editable: false},\n                      {dataField: 'event', text: 'Event', editable: false, style: {overflow: 'hidden'}}\n                    ]}\n                    data={props.turnHistory}\n                  />\n                </Col>\n              </Row>:\n                <div />\n            }\n          </Col>\n        </Row> \n        { (window.innerWidth <= 1400) ?  \n              <Row xs='12'>\n                <Col xs='12' style={{overflowY: 'auto', height: '25vh'}}>\n                  <DatatablePage\n                    keyField='turn'\n                    rowStyle={(row, rowIndex) => {return {backgroundColor: row.event === 'attack' ? `var(--color-danger)` : 'inherit'}; }}\n                    columns={[\n                      {\n                        dataField: 'turn',\n                        text: 'Turn',\n                        sort: true, \n                        editable: false\n                      },\n                      {dataField: 'player', text: 'Player', sort: true, editable: false, style: {overflow: 'hidden', whiteSpace: 'nowrap'}},\n                      {dataField: 'tile', text: 'tile', editable: false},\n                      {dataField: 'event', text: 'Event', editable: false}\n                    ]}\n                    data={props.turnHistory}\n                  />\n                </Col>\n              </Row>\n              :\n              <div />\n        }\n        <Row className='align-items-center d-flex'>\n          <Col xs='12' style={{position: 'fixed', bottom: '6em'}}>\n            <Button className='warningButton' style={{width: '100%', height: '2.5em'}} onClick={(e)=>{setItemTrayPanelOpen(!itemTrayPanelOpen)}}>\n              Items: 0\n            </Button>\n          </Col>\n        </Row>\n        <Row className='align-items-center d-flex'>\n          <Col xs='12' style={{opacity: '0.8', position: 'fixed', bottom: '2.5em', backgroundColor: props.playerState.role === 'alien' ? 'red' : 'green'}}>\n            <h2 style={{align: 'center', flex: 'display'}}>\n             ROLE: {props.playerState.role.toUpperCase()}\n            </h2>\n          </Col>\n        </Row>\n        <Row className='align-items-center d-flex'>\n          <Col xs='12' style={{position: 'fixed', bottom: '0em'}}>\n            <h4 style={{align: 'center', flex: 'display'}}>\n             Max Movement: {props.playerState.maxMovement}\n            </h4>\n          </Col>\n        </Row>\n        <SlidingPanel\n          type='bottom'\n          isOpen={itemTrayPanelOpen}\n          backdropClicked={() => setItemTrayPanelOpen(false)}\n          noBackdrop={false}\n          size={ 30 }\n        >\n          <div style={{overflow: 'hidden', backgroundColor: '#B5BEC6', height: '100%', paddingBottom: '5em', opacity: '90%'}}>\n            Balls \n          </div>\n        </SlidingPanel>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default GameSession;\n","export default __webpack_public_path__ + \"static/media/darkesthour.4ae16f8a.wav\";","import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, NavLink, useNavigate } from 'react-router-dom';\nimport {\n  Modal,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport { ToastContainer, Slide, cssTransition, toast } from 'react-toastify';\nimport io from 'socket.io-client';\nimport {\n  IoPersonCircleOutline,\n  IoPencil\n} from 'react-icons/io5'; // MIT Licensed icons\nimport SlidingPanel from 'react-sliding-side-panel';\n\n\nimport './App.css';\nimport 'react-sliding-side-panel/lib/index.css';\n\nimport Home from './Home';\nimport Editor from './Editor';\nimport Lobbies from './Lobbies';\nimport Lobby from './Lobby';\nimport GameSession from './GameSession';\n\nimport bgAudioFile from './darkesthour.wav';\n\n// import safeSpace from 'safe-space';\n// import dangerSpace from 'danger-space';\n  \nvar host = window.location.hostname;\nconst socket = io('http://' + host + ':5069');\n\n\nfunction App() {\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [tempUserName, setTempUserName] = useState(userName);\n  const [lobbySearchInput, setLobbySearchInput] = useState('');\n  const [lobbyId, setLobbyId] = useState('');\n  const [lobby, setLobby] = useState();\n  const [lobbies, setLobbies] = useState([]); \n  const [openLobbyPanel, setOpenLobbyPanel] = useState(false);\n  const [newMap, setNewMap] = useState({tiles: {}, meta: {}});\n  const [mapOptions, setMapOptions] = useState([\n    {label: 'New', value: newMap}\n  ]);\n  const [mapEditorSelection, setMapEditorSelection] = useState(mapOptions[0]);\n  const [lobbyMapSelection, setLobbyMapSelection] = useState(null);\n  const [gameCodeId, setGameCodeId] = useState('');\n  //const [role, setRole] = useState('');\n  const [playerState, setPlayerState] = useState();\n  const [notificationEvent, setNotificationEvent] = useState(undefined);\n  const [newUsernameUnavailable, setNewUsernameUnavailable] = useState(false);\n  const [noiseTileSelectEn, setNoiseTileSelectEn] = useState(false);\n  const [noiseTile, setNoiseTile] = useState('');\n  const [updateToastID, setUpdateToastID] = useState();\n  const [turnHistory, setTurnHistory] = useState([]);\n  const [playerTurnOrder, setPlayerTurnOrder] = useState([]);\n  const [currPlayer, setCurrPlayer] = useState('');\n\n\n  const lobbyRef = useRef(lobby);\n  const tempUserNameRef = useRef(tempUserName);\n\n  const navigate = useNavigate();\n\n\n  const handleUserModalClose = () => {\n    setNewUsernameUnavailable(false);\n    setShowUserModal(false);\n  }\n\n  const handleUnload = (e) => {\n    e.preventDefault();\n  }\n\n  /**\n   *  Pagge load useEffect\n   */\n  useEffect(() => {\n    var cached_username = window.localStorage.getItem('username');\n    if (cached_username !== 'null') {\n      socket.emit('registerUsername', {username: cached_username});\n      setTempUserName(cached_username);\n    }\n    //setUserName(window.localStorage.getItem('username'));\n\n    socket.on('emitMapList', (data) => {\n      let _mapOptions = [...mapOptions];\n      setMapOptions([{label: 'New', value: {tiles: [], meta: {safe: 0, dangerous: 0, hspawn: 0, aspawn: 0, escapepod: 0, remove: 0}}}, ...data]);\n    });\n    socket.on('lobbiesList', (data) => {\n      setLobbies(data);\n    });\n\n    socket.on('playerEvent', (data) => {\n      setNotificationEvent({...data, 'state': 'playerEvent'});\n    });\n\n    socket.on('roomEvent', (data) => {\n      setNotificationEvent({...data, 'state': 'roomEvent'});\n    });\n\n    socket.on('updateCurrentPlayer', (data) => {\n      setCurrPlayer(data.currPlayer);\n    });\n\n    // socket.on('lobbyPlayerJoin', (data) => {\n    //   let updated_lobby = {...lobbyRef.current};\n    //   updated_lobby.players.push({playerName: data.playerName, playerReady: false});\n    //   setLobby(updated_lobby);\n    // });\n\n    // socket.on('lobbyPlayerReadyUpdate', (data) => {\n    //   let updated_lobby = {...lobbyRef.current};\n    //   updated_lobby.players[data.playerIdx].playerReady = data.playerReady;\n    //   setLobby(updated_lobby);\n    // });\n\n    socket.on('roleAssignment', (data) => {\n      setPlayerState(data.player);\n    });\n\n    socket.on('joinCreatorToLobby', (data) => {\n      setLobby(lobbies.filter((lobby) => lobby.lobbyId === lobbyId)[0]);\n    })\n\n    socket.on('usernameRegistered', (data) => {\n      setUserName(tempUserNameRef.current);\n      window.localStorage.setItem('username', tempUserNameRef.current);\n      handleUserModalClose();\n    });\n\n    socket.on('usernameUnavailable', (data) => {\n      setNewUsernameUnavailable(true);\n    });\n\n    socket.on(\"gameStartResp\", (data) => {\n      setOpenLobbyPanel(false);\n      navigate(`/gamesession/${lobbyRef.current.lobbyId}`, {replace: true});\n    });\n\n    socket.on('turnOrder', (data) => {\n      setPlayerTurnOrder(data.turnOrder);\n      setCurrPlayer(data.currPlayer);\n    });\n\n    socket.on('connect', (data) => {\n      socket.emit('getLobbies', {});\n      socket.emit('getMapList', {});\n    });\n\n  var audio = document.getElementById(\"bgAudio\");\n  audio.volume = 0.3;\n  audio.play();\n\n    // Apparently can't send socket events in this event handler\n    //window.addEventListener(\"beforeunload\", handleUnload);\n  }, []);\n\n\n  const noiseTileToast = () => {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <span> Select tile to generate noise at: {noiseTile} </span>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button \n              className='primaryButton'\n              onClick={(e) => {\n                setNoiseTileSelectEn(false);\n                socket.emit('noiseInSector', {\n                  state: 'noise',\n                  tile: noiseTile,\n                  playerId: notificationEvent.playerId,\n                  numHeldCards: notificationEvent.playerNumHeldCards,\n                  lobbyId: lobby.lobbyId,\n                  includeSelf: true\n                });\n                toast.dismiss(updateToastID);\n                setUpdateToastID();\n                setNoiseTile('');\n                setNotificationEvent(undefined);\n              }}> Submit </Button>\n            </Col>\n          </Row>\n      </Container>\n    );\n  }\n\n  useEffect(() => {\n    if (lobbyId !== '') {\n      setLobby(lobbies.filter((lobby) => lobby.lobbyId === lobbyId)[0]);\n    }\n  }, [lobbies]);\n\n\n  useEffect(() => {\n    toast.update(updateToastID, {\n      render: noiseTileToast,\n      toastId: updateToastID\n    });\n  }, [noiseTile]);\n\n\n  useEffect(() => {\n    if (notificationEvent !== undefined) {\n      var card   = notificationEvent.card;\n      var tile   = notificationEvent.tile;\n      var player = notificationEvent.playerId;\n      var event  = card.split(' - ')[0];\n\n      if (event === 'attack') {\n        player = `${player} -> ${notificationEvent.targetPlayer}`;\n        // let updatedLobbyState = {...lobby};\n        // let playerIdx = \n        // updatedLobbyState.players[]\n      }\n\n      if (card !== 'any') {\n        setTurnHistory([...turnHistory, {turn: turnHistory.length, event: event.replace('_', ' '), tile: tile, player: player}]);\n      }\n\n      if (card === 'attack') {\n        toast.error(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            {notificationEvent.targetPlayer} killed by {player} at: {tile}\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );   \n      } else if (card === 'silence') {\n        toast.success(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            Silence in all sectors\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );  \n      } else if (card.includes('silence -')) {\n        toast.success(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            Silence in all sectors + Item!\n            {card.split(' - ')[1]}\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        ); \n      } else if (card === 'noise') {\n        toast.error(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            You hear a noise in sector {tile}\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );        \n      } else if (card === 'successful_escape') {\n        let updatedLobbyMap = {...lobbyMapSelection};\n        updatedLobbyMap.value.tiles[tile].status = 'inaccessible'; \n        setLobbyMapSelection(updatedLobbyMap);\n        toast.success(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            Escape pod at {tile} reached! {player} has escaped the space station to live another day!\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );  \n      } else if (card === 'damaged_escapepod') { \n        let updatedLobbyMap = {...lobbyMapSelection};\n        updatedLobbyMap.value.tiles[tile].status = 'inaccessible'; \n        setLobbyMapSelection(updatedLobbyMap);\n        toast.error(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            Escape pod at {tile} reached! Oh no, that escape pod is damaged and does not work! Run {player}!\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );  \n      }  \n\n      else if (card === 'any') {\n        setNoiseTileSelectEn(true);\n        setUpdateToastID(toast.warning(\n          noiseTileToast,\n          {\n            closeOnClick: false,\n            autoClose: false,\n            draggable: false,\n            closeButton: false\n          }\n        ));\n\n        return;\n      }\n\n      if (notificationEvent.state === 'playerEvent') {\n        socket.emit('noiseInSector', {\n          state: card.includes('silence') ? 'silence' : card.includes('escape') ? card.replace('_', ' ') : 'noise',\n          tile: card.includes('silence') ? '-' : tile,\n          playerId: notificationEvent.playerId,\n          numHeldCards: notificationEvent.playerNumHeldCards,\n          lobbyId: lobby.lobbyId,\n          includeSelf: false\n        });\n      }\n      setNotificationEvent(undefined);\n    }\n  }, [notificationEvent]);\n\n\n  useEffect(() => {\n    lobbyRef.current = lobby;\n\n    if (lobby !== undefined) {\n      let map = mapOptions.filter((map) => map.label === lobby.mapLabel);\n\n      if (map.length === 1) {\n        setLobbyMapSelection(map[0]);        \n      }\n    }\n  }, [lobby]);\n\n\n  useEffect(() => {\n    tempUserNameRef.current = tempUserName;\n\n    // window.addEventListener(\"beforeunload\", handleUnload);\n    // return () => window.removeEventListener(\"beforeunload\", handleUnload);\n  }, [tempUserName]);\n\n\n  const handleUsernameSave = () => {\n    // Query for existing usernames\n    console.log('Registering username: ' + tempUserName);\n    socket.emit('registerUsername', {username: tempUserName});\n    // setUserName(tempUserName);\n    // handleUserModalClose();\n  }\n\n\n  return (\n    <div className=\"App\">\n    {\n      playerState === undefined ?\n        <Navbar collapseOnSelect expand='sm' bg='dark' variant='dark' sticky='top'>\n          <Container className=\"me-auto\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav activeKey={window.location.pathname} fill className=\"me-auto\">\n              <Nav.Link as={NavLink} style={{color: 'orange'}} activeStyle={{textDecoration: 'underline', textDecorationThickness: '0.2em', textUnderlineOffset: '0.5em'}} exact to=\"/\">| Home | </Nav.Link>\n              <Nav.Link as={NavLink} style={{color: 'orange'}} activeStyle={{textDecoration: 'underline', textDecorationThickness: '0.2em', textUnderlineOffset: '0.5em'}} to=\"/editor\">| Map Editor | </Nav.Link>\n              <Nav.Link as={NavLink} style={{color: 'orange'}} activeStyle={{textDecoration: 'underline', textDecorationThickness: '0.2em', textUnderlineOffset: '0.5em'}} to=\"/lobbies\">| Lobbies | </Nav.Link>\n            </Nav>\n            <Navbar.Brand style={{marginTop: '-1em', marginBottom: '-1em', marginRight: '0em'}}>\n              {\n                lobbyId.length > 0 ?\n                  <span style={{color: 'orange', fontSize: '0.8em', marginRight: '1em', cursor: 'pointer'}} onClick={() => {setOpenLobbyPanel(true)}}>\n                    | Current Lobby |\n                  </span> :\n                  <div />\n              }\n              <IoPersonCircleOutline size={42} style={{cursor: 'pointer'}} onClick={(e) => {setShowUserModal(true);}} />\n            </Navbar.Brand>\n          </Navbar.Collapse>\n          </Container>\n        </Navbar> :\n        <div />\n      }\n        <Routes>\n          <Route path='/' exact element={<Home />} />\n        </Routes>\n        <Routes>\n          <Route path='/editor' element={\n            <Editor\n              userName={userName}\n              newMap={newMap}\n              setNewMap={setNewMap}\n              mapOptions={mapOptions}\n              setMapOptions={setMapOptions}\n              mapSelection={mapEditorSelection}\n              setMapSelection={setMapEditorSelection}\n              socket={socket}\n            />\n          }/>\n        </Routes>\n        <Routes>\n          <Route path='/lobbies' element={\n            <Lobbies\n              userName={userName}\n              searchInput={lobbySearchInput}\n              lobbies={lobbies}\n              lobby={lobby}\n              setLobby={setLobby}\n              setSearchInput={setLobbySearchInput}\n              lobbyId={lobbyId}\n              setLobbyId={setLobbyId}\n              setOpenLobbyPanel={setOpenLobbyPanel}\n              setShowUserModal={setShowUserModal}\n              socket={socket}\n            />\n          }/>\n        </Routes>\n        <Routes>\n          <Route path='/gamesession/:id' element={\n            <GameSession\n              userName={userName}\n              searchInput={lobbySearchInput}\n              lobbies={lobbies}\n              lobby={lobby}\n              setLobby={setLobby}\n              setSearchInput={setLobbySearchInput}\n              lobbyId={lobbyId}\n              setLobbyId={setLobbyId}\n              setOpenLobbyPanel={setOpenLobbyPanel}\n              socket={socket}\n              mapSelection={lobbyMapSelection}\n              setMapSelection={setLobbyMapSelection}\n              gameCodeId={gameCodeId}\n              playerName={tempUserName}\n              playerState={playerState}\n              noiseTileSelectEn={noiseTileSelectEn}\n              setNoiseTile={setNoiseTile}\n              turnHistory={turnHistory}\n              playerTurnOrder={playerTurnOrder}\n              currPlayer={currPlayer}\n            />\n          }/>\n        </Routes>\n{/*      </Router>*/}\n\n      <Modal show={showUserModal} onHide={handleUserModalClose} onKeyDown={(e) => {if(e.key === 'Enter') {handleUsernameSave();}}}>\n        <Modal.Header>\n          <Modal.Title >User Info</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n          <Row className='align-items-center'>\n            <Col xs={12} className='align-items-center' style={{display: 'flex', justifyContent: 'center'}}>\n              <InputGroup>\n                <FormControl\n                  aria-label=\"User Name\"\n                  value={tempUserName}\n                  style={{boxShadow: 'none', borderColor: 'grey'}}\n                  onChange={(e) => { setTempUserName(e.target.value); }}\n                  // onKeyPress={(e) => {if(e.key === 'Enter') { handleSubmit(e); };}}\n                />\n                <InputGroup.Text><IoPencil/></InputGroup.Text>\n              </InputGroup>\n            </Col>\n          </Row>\n          {\n            newUsernameUnavailable ?\n              <Row className='align-items-center'>\n                <Col className='align-items-center d-flex'>\n                  <span style={{color: 'red'}}> UNAVAILABLE </span>\n                </Col>\n              </Row> :\n              <div />\n            }\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={(e) => {setTempUserName(userName); handleUserModalClose();}}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={(e) => {handleUsernameSave();}}>\n            Save Changes\n          </Button\n>        </Modal.Footer>\n      </Modal>\n\n        <SlidingPanel\n          type='bottom'\n          isOpen={openLobbyPanel}\n          backdropClicked={() => setOpenLobbyPanel(false)}\n          noBackdrop={false}\n          size={ 85 }\n        >\n          <div style={{overflow: 'scroll', backgroundColor: '#B5BEC6', height: '100%', paddingBottom: '5em', opacity: '100%'}}>\n            <Lobby\n              setOpenLobbyPanel={setOpenLobbyPanel}\n              lobbyId={lobbyId}\n              setLobbyId={setLobbyId}\n              lobby={lobby}\n              setLobby={setLobby}\n              mapOptions={mapOptions}\n              setMapOptions={setMapOptions}\n              newMap={newMap}\n              setNewMap={setNewMap}\n              lobbyMapSelection={lobbyMapSelection}\n              setLobbyMapSelection={setLobbyMapSelection}\n              gameCodeId={gameCodeId}\n              setGameCodeId={setGameCodeId}\n              userName={userName}\n              //navigate={navigate}\n              socket={socket}\n            /> \n          </div>\n        </SlidingPanel>\n      <ToastContainer\n        newestOnTop={true}\n        transition={Slide}\n        // transition={cssTransition({\n        //   enter: 'slideIn',\n        //   exit: 'slideOut',\n        // })}\n        draggablePercent={20}\n      />\n\n      <audio loop autoplay id='bgAudio'> \n        <source src={bgAudioFile} type=\"audio/wav\" />\n        Your browser does not support the audio element.\n      </audio>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}