{"version":3,"sources":["imgs/hex-bg-2.png","Home.js","defaultMapNames.js","Editor.js","Table.js","Lobbies.js","Lobby.js","GameSession.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","document","body","style","backgroundColor","_jsx","Container","fluid","children","Row","xs","display","justifyContent","_jsxs","Col","src","home_bg","alt","height","concat","window","innerHeight","width","defaultMapNames","location","hostname","Editor","viewMode","undefined","spaceOptions","setSpaceOptions","useState","label","value","color","numTiles","maxTiles","toggleDrawingBtnColor","setToggleDrawingBtnColor","currSpace","setCurrSpace","unsavedChanges","setUnsavedChanges","mapEditor","setMapEditor","spaceSelector","setSpaceSelector","addEventListener","event","keycode","parseInt","keyCode","console","log","length","socket","on","id","data","err","message","hexClickHandle","e","emit","test","updatedMap","_objectSpread","newMap","oldTile","Object","keys","tiles","find","tile","tileType","target","getStage","findOne","setAttrs","fill","mapSelection","updatedSpaceOptions","space_id","space","currentTarget","setNewMap","lines","setLines","React","isDrawing","setIsDrawing","drawingEnabled","setDrawingEnabled","handleMouseDown","transform","layerRef","current","getAbsoluteTransform","copy","invert","point","getPointerPosition","points","x","y","useRef","handleMouseMove","stage","lastLine","splice","primarySelectStyles","control","base","borderColor","boxShadow","marginBottom","stageScaleX","setStageScaleX","innerWidth","stageScaleY","setStageScaleY","Button","variant","onClick","confirm","className","sm","md","Stage","pixelRatio","marginTop","onWheel","evt","preventDefault","deltaY","scaleX","scaleY","onMouseDown","onMousemove","onTouchStart","onTouchmove","onMouseup","handleMouseUp","draggable","Layer","generateMapEditor","hexagons","row","col","String","fromCharCode","toString","padStart","push","_Fragment","Text","text","fontSize","RegularPolygon","perfectDrawEnabled","shadow","sides","radius","stroke","strokeWidth","onTap","name","fillAfterStrokeEnabled","opacity","rotation","generateMap","ref","map","line","i","Line","tension","lineCap","globalCompositeOperation","paddingLeft","Select","options","mapOptions","onChange","setMapSelection","meta","styles","isSearchable","currentMapNames","_map","defaultMapName","filter","indexOf","nameLoopCount","defaultMapNamesUpdated","newMapName","prompt","setMapOptions","at","user","userName","mapName","DatatablePage","SearchBar","Search","afterSaveCell","oldValue","newValue","column","ToolkitProvider","keyField","columns","search","defaultSearch","searchInput","innerprops","margin","searchProps","onSearch","setSearchInput","srText","BootstrapTable","baseProps","rowStyle","editCellStyle","editorStyle","cellEdit","cellEditFactory","mode","blurToSave","rowClasses","selectRow","expandRow","defaultSorted","host","Lobbies","lobbyColumns","dataField","editable","isDummyField","headerStyle","colum","colIndex","textAlign","formatter","cell","rowIndex","formatExtraData","private","IoLockClosed","size","clickToSelect","clickToEdit","hideSelectColumn","bgColor","onSelect","isSelect","lobbyId","lobby","lobbyName","pw","alert","fetch","method","headers","JSON","stringify","then","response","json","status","setLobbyId","setLobby","setOpenLobbyPanel","roomCode","userID","setShowUserModal","lobbyPW","newID","uuidv4","slice","toUpperCase","lobbies","includes","creatorPlayer","disabled","inProgress","Lobby","refresh","setRefresh","playerListColumns","useNavigate","verticalAlign","players","playerReady","IoCheckmarkCircleOutline","playerSelectRow","_lobby","playerName","lobbyMapSelection","mapLabel","filterOption","candidate","input","setLobbyMapSelection","position","bottom","player","every","GameSession","prevSpace","setPrevSpace","itemTrayPanelOpen","setItemTrayPanelOpen","pathViewPlayer","setPathViewPlayer","playerState","pos","PriorityQueue","constructor","this","elements","enqueue","element","priority","sort","a","b","dequeue","shift","isEmpty","hexDistance","x1","y1","x2","y2","dx","Math","abs","dy","dx_dy","max","findShortestPath","startTile","endTile","grid","openSet","cameFrom","Map","gScore","fScore","endX","match","charCodeAt","startX","endY","startY","set","get","currentX","currentY","split","Number","path","has","unshift","XY2Tile","neighbors","getHexNeighbors","neighbor","neighborX","neighborY","tentative_gScore","some","el","directions","dir","nx","ny","noiseTileSelectEn","setNoiseTile","movement_limit","maxMovement","fillRadialGradientStartPoint","fillRadialGradientStartRadius","fillRadialGradientEndPoint","fillRadialGradientEndRadius","fillRadialGradientColorStops","generatePlayerPath","tile_history","uncertainty_r","turnHistory","turn","forEach","Arrow","getRow","getCol","pointerLength","pointerWidth","pop","Circle","playerTableSelectRow","xl","offsetX","listening","currPlayer","playerTurnOrder","playerId","marginLeft","overflowY","overflow","whiteSpace","role","align","flex","SlidingPanel","type","isOpen","backdropClicked","noBackdrop","paddingBottom","io","App","showUserModal","setUserName","tempUserName","setTempUserName","lobbySearchInput","setLobbySearchInput","setLobbies","openLobbyPanel","mapEditorSelection","setMapEditorSelection","gameCodeId","setGameCodeId","setPlayerState","notificationEvent","setNotificationEvent","newUsernameUnavailable","setNewUsernameUnavailable","setNoiseTileSelectEn","noiseTile","updateToastID","setUpdateToastID","setTurnHistory","setPlayerTurnOrder","setCurrPlayer","lobbyRef","tempUserNameRef","navigate","handleUserModalClose","cached_username","localStorage","getItem","username","safe","dangerous","hspawn","aspawn","escapepod","remove","setItem","replace","turnOrder","noiseTileToast","state","numHeldCards","playerNumHeldCards","includeSelf","toast","dismiss","update","render","toastId","card","targetPlayer","error","closeOnClick","autoClose","success","warning","closeButton","handleUsernameSave","Navbar","collapseOnSelect","expand","bg","sticky","Toggle","Collapse","Nav","activeKey","pathname","Link","as","NavLink","activeStyle","textDecoration","textDecorationThickness","textUnderlineOffset","exact","to","Brand","marginRight","cursor","IoPersonCircleOutline","Routes","Route","Modal","show","onHide","onKeyDown","key","Header","Title","Body","InputGroup","FormControl","IoPencil","Footer","ToastContainer","newestOnTop","transition","Slide","draggablePercent","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","Router","getElementById"],"mappings":"0WAAe,G,aAAA,IAA0B,sC,OCoC1BA,MA9BDC,IAEZC,qBAAU,KACRC,SAASC,KAAKC,MAAMC,gBAAkB,QAE/B,WACHH,SAASC,KAAKC,MAAMC,gBAAkB,SAC1C,IACC,IAWH,OACEC,cAACC,IAAS,CAACC,OAAK,EAAAC,SACdH,cAACI,IAAG,CAACC,GAAG,KAAKP,MAAO,CAACQ,QAAS,OAAQC,eAAgB,UAAUJ,SAC9DK,eAACC,IAAG,CAACJ,GAAG,KAAKP,MAAO,CAACQ,QAAS,OAAQC,eAAgB,UAAUJ,SAAA,CAC9DH,cAAA,OAAKU,IAAKC,EAASC,IAAI,UAAUd,MAAO,CAACe,OAAO,GAADC,OAA0B,GAArBC,OAAOC,YAAkB,MAAMC,MAAO,QAAQ,a,gBC7BrG,MAAMC,EAAkB,CAC3B,QACA,OACA,YACA,QACA,QACA,SACA,SACA,SACA,aACA,UACA,QACA,UACA,WACA,WACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,OACA,OACA,QACA,OACA,OACA,OACA,UACA,SACA,OACA,UACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,SACA,WACA,UACA,SACA,WACA,QACA,SACA,WACA,UACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,YACA,QACA,QACA,OACA,WACA,UACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,QACA,OACA,UACA,MACA,OACA,SACA,OACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,SACA,QACA,SACA,MACA,QACA,SACA,QACA,SACA,MACA,QACA,QACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,OACA,SACA,OACA,OACA,OACA,UACA,OACA,SACA,SACA,MACA,OACA,SACA,OACA,MACA,SChFOH,OAAOI,SAASC,SA6cZC,MA3cf,SAAgB3B,GACd,MAAM4B,OAA8BC,IAAnB7B,EAAM4B,SAAyB5B,EAAM4B,SAAW,IAE1DE,EAAcC,GAAmBC,mBAAS,CAC/C,CAACC,MAAO,WAAYC,MAAO,OAAQC,MAAO,QAASC,SAAU,EAAG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","file":"static/js/main.ca975267.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hex-bg-2.b3512a1a.png\";","import React, { useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Select from 'react-select';\n\nimport home_bg from './imgs/hex-bg-2.png';\n\nconst Home = (props) => {\n  // Calling the function on component mount\n  useEffect(() => {\n    document.body.style.backgroundColor = 'black';\n\n    return function cleanup() {\n        document.body.style.backgroundColor = '#cccccc';//'#e9e9ea';\n    };\n  }, []);\n\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'transparent !important', \n      boxShadow: 'none',\n    })\n  };\n\n  return (\n    <Container fluid>\n      <Row xs='12' style={{display: 'flex', justifyContent: 'center'}}>\n        <Col xs='12' style={{display: 'flex', justifyContent: 'center'}}>\n          <img src={home_bg} alt=\"home-bg\" style={{height: `${window.innerHeight * 0.90}px`, width: null}}/>; {/* width: `${window.innerWidth}px` */}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","export const defaultMapNames = [\n    'Alula',\n    'Alya',\n    'Andromeda',\n    'Ariel',\n    'Astra',\n    'Astrid',\n    'Aurora',\n    'Bianca',\n    'Cassiopeia',\n    'Celeste',\n    'Ceres',\n    'Columba',\n    'Cordelia',\n    'Cressida',\n    'Elara',\n    'Estella',\n    'Esther',\n    'Europa',\n    'Faye',\n    'Gaia',\n    'Halley',\n    'Juliet',\n    'Larissa',\n    'Leda',\n    'Leia',\n    'Libra',\n    'Luna',\n    'Lyra',\n    'Maia',\n    'Miranda',\n    'Nevaeh',\n    'Nova',\n    'Ophelia',\n    'Pandora',\n    'Phoebe',\n    'Portia',\n    'Rhea',\n    'Sally',\n    'Sidra',\n    'Sitara',\n    'Soleil',\n    'Solstice',\n    'Solveig',\n    'Starla',\n    'Starling',\n    'Starr',\n    'Stella',\n    'Sunshine',\n    'Titania',\n    'Vega',\n    'Venus',\n    'Vesta',\n    'Aldrin',\n    'Altair',\n    'Apollo',\n    'Archer',\n    'Armstrong',\n    'Astro',\n    'Atlas',\n    'Buzz',\n    'Callisto',\n    'Calypso',\n    'Castor',\n    'Comet',\n    'Cosmo',\n    'Cygnus',\n    'Galilei',\n    'Galileo',\n    'Glenn',\n    'Hercules',\n    'Holmes',\n    'Janus',\n    'Jett',\n    'Jupiter',\n    'Leo',\n    'Luke',\n    'Meteor',\n    'Nash',\n    'Neil',\n    'Neptune',\n    'Oberon',\n    'Orion',\n    'Pallas',\n    'Perseus',\n    'Phoenix',\n    'Planet',\n    'Pluto',\n    'Pollux',\n    'Red',\n    'Rigel',\n    'Rocket',\n    'Saros',\n    'Sirius',\n    'Sol',\n    'Solar',\n    'Spock',\n    'Tarique',\n    'Taurus',\n    'Trek',\n    'Vulcan',\n    'Aries',\n    'Eclipse',\n    'Galaxy',\n    'Halo',\n    'Heaven',\n    'Juno',\n    'Mars',\n    'Marz',\n    'Mercury',\n    'Moon',\n    'Saturn',\n    'Shadow',\n    'Sky',\n    'Skye',\n    'Skylar',\n    'Star',\n    'Sun',\n    'Sunny'\n];","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport {\n  Stage,\n  Layer,\n  Text,\n  Image,\n  Line,\n  Rect,\n  Circle,\n  RegularPolygon\n} from 'react-konva';\n\nimport {\n  IoPersonCircleOutline,\n  IoPencil\n} from 'react-icons/io5'; // MIT Licensed icons\n\nimport './App.css';\n\nimport Home from './Home';\nimport { defaultMapNames } from './defaultMapNames';\n\n// import safeSpace from 'safe-space';\n// import dangerSpace from 'danger-space';\n\nvar host = window.location.hostname;\n\nfunction Editor(props) {\n  const viewMode = props.viewMode !== undefined ? props.viewMode : '';\n\n  const [spaceOptions, setSpaceOptions] = useState([\n    {label: '1 - Safe', value: 'safe', color: 'white', numTiles: 0, maxTiles: -1},\n    {label: '2 - Dangerous', value: 'dangerous', color: 'grey', numTiles: 0, maxTiles: -1},\n    {label: '3 - Human Spawn', value: 'hspawn', color: 'purple', numTiles: 0, maxTiles: 1},\n    {label: '4 - Alien Spawn', value: 'aspawn', color: 'red', numTiles: 0, maxTiles: 1},\n    {label: '5 - Escape Pod', value: 'escapepod', color: 'orange', numTiles: 0, maxTiles: 4},\n    {label: '6 - Remove', value: 'remove', color: '', numTiles: 0, maxTiles: -1}\n  ]);\n\n  const [toggleDrawingBtnColor, setToggleDrawingBtnColor] = useState('grey');\n  const [currSpace, setCurrSpace] = useState();\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n  // const [newMap, props.setNewMap] = useState({tiles: {}, meta: {}});\n  const [mapEditor, setMapEditor] = useState(viewMode !== 'viewOnly');\n  const [spaceSelector, setSpaceSelector] = useState(spaceOptions[0]);\n  // const [mapOptions, setMapOptions] = useState([\n  //   {label: 'New', value: newMap}\n  // ]);\n  // const [mapSelection, setMapSelection] = useState(props.mapOptions[0]);\n\n  document.addEventListener('keydown', function(event) {\n    const keycode = parseInt(event.keyCode);\n    console.log(keycode);\n    if ((keycode >= 49 && keycode <= (48 + spaceOptions.length)) && mapEditor) {\n      console.log('Setting space options');\n      setSpaceSelector(spaceOptions[keycode - 49]);\n    }\n  });\n\n  // client-side\n  useEffect(() => {\n    console.log(defaultMapNames);\n    //setMapEditorMap(generateMapEditor());\n    props.socket.on(\"connect\", () => {  console.log(props.socket.id); });\n    props.socket.on(\"responseMessage\", (data) => {  console.log(data); });\n    // props.socket.on(\"emitMapList\", (data) => {\n    //   let _mapOptions = [...mapOptions];\n    //   setMapOptions([{label: 'New', value: {tiles: [], meta: {safe: 0, dangerous: 0, hspawn: 0, aspawn: 0, escapepod: 0, remove: 0}}}, ...data]);\n    // });\n\n    props.socket.on(\"connect_error\", (err) => {  console.log(`connect_error due to ${err.message}`);});\n    // props.socket.emit('getMapList', {});\n  }, []);\n\n\n  const hexClickHandle = (e, id) => {\n    setCurrSpace(id);\n    props.socket.emit('incoming', {test: id});\n    let updatedMap = {...props.newMap};\n    console.log(spaceSelector.numTiles);\n    console.log(spaceSelector.maxTiles);\n    if (spaceSelector.numTiles === spaceSelector.maxTiles) {\n      const oldTile = Object.keys(props.newMap.tiles).find(tile => props.newMap.tiles[tile].tileType === spaceSelector.value);\n      console.log(oldTile);\n      console.log(e);\n      e.target.getStage().findOne(`#${oldTile}`).setAttrs({\n        fill: 'cyan'\n      });\n      delete updatedMap.tiles[oldTile];\n      delete props.mapSelection.value.tiles[oldTile];\n    } else {\n      const updatedSpaceOptions = [...spaceOptions];\n      const space_id = Object.keys(updatedSpaceOptions).find(space => updatedSpaceOptions[space].value === spaceSelector.value);\n      spaceSelector.numTiles += 1;\n      updatedSpaceOptions[space_id].numTiles = spaceSelector.numTiles;\n      setSpaceOptions(updatedSpaceOptions);\n      console.log(spaceOptions);\n      console.log(spaceSelector);\n    }\n    e.currentTarget.setAttrs({\n      fill: spaceSelector.color\n    });\n\n    updatedMap.tiles[id] = {\n        tileType: spaceSelector.value,\n        color: spaceSelector.color,\n    };\n    props.setNewMap(updatedMap);\n    setUnsavedChanges(true);\n  }\n\n\n  const generateMap = () => {\n    let hexagons = []\n    if (props.mapSelection === null) {\n      return hexagons;\n    }\n\n    for (let row = 1; row < 15; row++) {\n      for (let col = 0; col < 23; col++) {\n        let id = String.fromCharCode(0x41 + col) + (row).toString().padStart(2, '0');\n\n        if (id in props.mapSelection.value.tiles && props.mapSelection.value.tiles[id].tileType !== 'remove') {\n          hexagons.push(\n            <>\n            <Text\n              text={id}\n              fontSize={12}\n              x={26 + (col * (36 + 18))}\n              y={31 + (row * (36 + 27)) + (col % 2)*31}\n            />\n            <RegularPolygon\n              perfectDrawEnabled={false}\n              shadow={false}\n              key={id}\n              id={id}\n              x={36 + (col * (36 + 18))}\n              y={36 + (row * (36 + 27)) + (col % 2)*31}\n              sides={6}\n              radius={36}\n              fill={id === currSpace && viewMode !== 'viewOnly' ? 'green' : props.mapSelection.value.tiles[id].color}\n              stroke='black'\n              strokeWidth={1}\n              onClick={(e) => {setCurrSpace(id); props.socket.emit('incoming', {test: id}); }}\n              onTap={(e) => {setCurrSpace(id); props.socket.emit('incoming', {test: id}); }}\n              //dash={[16, 10]} // apply dashed stroke that is 10px long and 5 pixels apart\n              name={id}\n              fillAfterStrokeEnabled={true}\n              opacity={0.4}\n              rotation={90}\n            />\n            </>\n          );\n        }\n      }\n    }\n\n    return hexagons;\n  }\n\n\n  const generateMapEditor = () => {\n    let hexagons = [];\n\n    for (let row = 1; row < 15; row++) {\n      for (let col = 0; col < 23; col++) {\n        let id = String.fromCharCode(0x41 + col) + (row).toString().padStart(2, '0');\n\n        //if (!(id in Object.values(newMap).filter(tile => tile.tileType === 'remove'))) {\n        if (!(id in props.newMap.tiles && props.newMap.tiles[id].tileType === 'remove')) {\n          hexagons.push(\n            <>\n            <Text\n              text={id}\n              fontSize={12}\n              x={26 + (col * (36 + 18))}\n              y={31 + (row * (36 + 27)) + (col % 2)*31}\n            />\n            <RegularPolygon\n              perfectDrawEnabled={false}\n              shadow={false}\n              key={id}\n              id={id}\n              x={36 + (col * (36 + 18))}\n              y={36 + (row * (36 + 27)) + (col % 2)*31}\n              sides={6}\n              radius={36}\n              fill={id in props.mapSelection.value.tiles ?\n                props.mapSelection.value.tiles[id].color :\n                'cyan'\n              }\n              stroke='black'\n              strokeWidth={1}\n              onClick={(e) => {hexClickHandle(e, id)}}\n              onTap={(e) => {hexClickHandle(e, id)}}\n              //dash={[16, 10]} // apply dashed stroke that is 10px long and 5 pixels apart\n              name={id}\n              fillAfterStrokeEnabled={true}\n              opacity={0.4}\n              rotation={90}\n            />\n            </>\n          );\n        }\n      }\n    }\n\n    return hexagons;\n  }\n\n\n  const [lines, setLines] = React.useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [drawingEnabled, setDrawingEnabled] = useState(false);\n\n  const handleMouseDown = (e) => {\n    setIsDrawing(true);\n    //const pos = e.target.getStage().getPointerPosition();\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = e.target.getStage().getPointerPosition();\n    point = transform.point(point);\n    setLines([...lines, { points: [point.x, point.y] }]);\n  };\n\n  const layerRef = React.useRef();\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if ((!(isDrawing && drawingEnabled)) || lines.length === 0) {\n      return;\n    }\n    const stage = e.target.getStage();\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = stage.getPointerPosition();\n    point = transform.point(point);\n    let lastLine = {points: []};\n    if (lines.length !== 0) {\n      lastLine = lines[lines.length - 1];\n    }\n    // add point\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'grey !important',\n      boxShadow: 'none',\n      marginBottom: '1em',\n    })\n  };\n\n  const [stageScaleX, setStageScaleX] = useState(window.innerWidth < 1000 ? 0.6 : 1);\n  const [stageScaleY, setStageScaleY] = useState(window.innerWidth < 1000 ? 0.6 : 1);\n  return (\n     <Container fluid>\n     {\n        viewMode === 'viewOnly' ?\n          <div /> :\n          <Row>\n            <Button\n              variant='secondary'\n              style={{boxShadow: 'None'}}\n              onClick={() => {\n                if (mapEditor && unsavedChanges) {\n                  if (window.confirm('WARNING: Unsaved changes will be lost. Proceed?')) {\n                    setMapEditor(!mapEditor);\n                  }\n                } else {\n                  setMapEditor(!mapEditor);\n                }\n              }}\n            >\n              {\n                mapEditor ?\n                  <span> View Map </span> :\n                  <span> Map Editor </span> \n              }\n            </Button>\n          </Row>\n      }\n      <Row className='align-items-center'>\n        <Col sm='12' md='9' className='align-items-center'>\n          <Stage\n            pixelRatio={1.5}\n            style={{marginTop: '1em', display: 'flex', justifyContent: 'center'}}\n            //width={viewMode === 'viewOnly' ? '25%' : window.innerWidth * (window.innerWidth < 1000 ? 1 : 0.75)}\n            width={window.innerWidth * (window.innerWidth < 1000 ? 1 : 0.75)}\n            height={window.innerHeight * (window.innerHeight < 700 ? 0.55 : 0.85)}\n            onWheel={(e) => {\n              e.evt.preventDefault();\n              if (e.evt.deltaY > 15 || e.evt.deltaY < 15) {\n                setStageScaleX(stageScaleX - (e.evt.deltaY/250));\n                setStageScaleY(stageScaleX - (e.evt.deltaY/250));\n              }\n            }}\n            scaleX={viewMode === 'viewOnly' ? 0.45 : stageScaleX}\n            scaleY={viewMode === 'viewOnly' ? 0.45 : stageScaleY}\n            onMouseDown={handleMouseDown}\n            onMousemove={handleMouseMove}\n            onTouchStart={handleMouseDown}\n            onTouchmove={handleMouseMove}\n            onMouseup={handleMouseUp}\n            draggable={!drawingEnabled}\n          >\n            <Layer>\n              {\n                mapEditor ? \n                  generateMapEditor() :\n                  //mapEditorMap :\n                  generateMap()\n              }\n            </Layer>\n            <Layer ref={layerRef}>\n              {lines.map((line, i) => (\n                <Line\n                  key={i}\n                  points={line.points}\n                  stroke=\"#df4b26\"\n                  strokeWidth={5}\n                  tension={0.5}\n                  lineCap=\"round\"\n                  globalCompositeOperation={'source-over'}\n                />\n              ))}\n            </Layer>\n          </Stage>\n        </Col>\n        {\n          viewMode === 'viewOnly' ?\n            <div /> :\n            <Col sm='3' className='align-items-center' style={{paddingLeft: '1em'}}>\n              <Select\n                options={props.mapOptions}\n                value={props.mapSelection}\n                onChange={(e) => {\n                  console.log(e);\n                  props.setMapSelection(e);\n                  props.setNewMap({...e.value});\n                  const updatedSpaceOptions = [...spaceOptions];\n                  updatedSpaceOptions.map((space) => {\n                    console.log(space);\n                    space.numTiles = e.value.meta[space.value];\n                  });\n                  console.log('UPDATED SPACE OPTS META: ');\n                  console.log(updatedSpaceOptions);\n                  setSpaceOptions(updatedSpaceOptions);\n                }}\n                styles={primarySelectStyles}\n              />\n              <Select\n                options={spaceOptions}\n                value={spaceSelector}\n                onChange={(e) => {setSpaceSelector(e);}}\n                styles={primarySelectStyles}\n                isSearchable={false}\n              />\n              <Row>\n                <Col>\n                  <Button\n                    style={{\n                      backgroundColor: toggleDrawingBtnColor,\n                      borderColor: toggleDrawingBtnColor,\n                      boxShadow: 'None',\n                      width: '100%',\n                    }}\n                    onClick={(e) => { setDrawingEnabled(!drawingEnabled); setToggleDrawingBtnColor(toggleDrawingBtnColor === 'grey' ? '#ff6961' : 'grey')}}\n                  >\n                      Toggle Drawing\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    style={{\n                      backgroundColor: 'grey',\n                      borderColor: 'grey',\n                      boxShadow: 'None',\n                      width: '100%',\n                    }} \n                    onClick={(e) => { setLines([]); }}\n                  >\n                      Clear Drawing\n                  </Button>\n                </Col>\n              </Row>\n              <Button\n                style={{\n                  backgroundColor: 'grey',\n                  boxShadow: 'None',\n                  borderColor: 'grey',\n                  width: '100%',\n                  marginTop: '1em'\n                }}\n                onClick={(e) => {\n                  const currentMapNames = props.mapOptions.map((_map) => { return _map.label; } );\n                  let defaultMapName = defaultMapNames.filter(_map => currentMapNames.indexOf(_map) === -1);\n                  let nameLoopCount = 1;\n                  let defaultMapNamesUpdated = defaultMapNames;\n                  while (defaultMapName.length === 0) {\n                    nameLoopCount += 1;\n                    defaultMapNamesUpdated = defaultMapNames.map((_map) => { return `${_map}-${nameLoopCount}` });\n                    defaultMapName = defaultMapNamesUpdated.filter(_map => currentMapNames.indexOf(_map) === -1);\n                  }\n                  const newMapName = prompt('Save new map as: ', `${defaultMapName[0]}`);\n                  if (newMapName !== null) {\n                    let meta = {};\n                    spaceOptions.map((space) => { meta[space.value] = space.numTiles});\n                    console.log(meta);\n                    props.mapOptions.push(\n                      {label: newMapName, value: props.newMap}\n                    );\n                    props.setMapOptions(props.mapOptions);\n                    props.setMapSelection(props.mapOptions.at(-1));\n                    props.socket.emit('save', {'mapName': newMapName, ...props.newMap, meta: meta, user: props.userName});\n                    setUnsavedChanges(false);\n                  }\n                }}\n              >\n                    Save New\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: 'grey',\n                  boxShadow: 'None',\n                  borderColor: 'grey',\n                  width: '100%',\n                  marginTop: '1em'\n                }}\n                onClick={(e) => {\n                  props.socket.emit('save', {mapName: props.mapSelection.label, ...props.newMap, user: props.userName});\n                  props.setMapOptions(props.mapOptions.map((map => {\n                    if (props.mapSelection.label === map.label) {\n                      return {label: props.mapSelection.label, value: props.newMap}\n                    } else {\n                      return map;\n                    }\n                  })));\n                  props.setMapSelection({\n                    ...props.mapSelection,\n                    value: props.newMap\n                  })\n                  setUnsavedChanges(false);\n                }}\n              >\n                  Update\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: 'grey',\n                  boxShadow: 'None',\n                  borderColor: 'grey',\n                  width: '100%',\n                  marginTop: '1em'\n                }}\n                onClick={(e) => {\n                  props.setNewMap({tiles: {}, meta: {}});\n                  const updatedSpaceOptions = [...spaceOptions];\n                  updatedSpaceOptions.map((space) => {\n                    space.numTiles = 0;\n                  });\n                  setSpaceOptions(updatedSpaceOptions);\n                  setUnsavedChanges(false);\n                }}\n              >\n                  Reset\n              </Button>\n            </Col>\n        }\n      </Row>\n    </Container>\n  );\n}\n\nexport default Editor;\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './Table.css';\n\nconst DatatablePage = (props) => {\n  const { SearchBar } = Search;\n  const afterSaveCell = (oldValue, newValue, row, column) => {\n    row.data = newValue;\n  };\n\n  return (\n    <ToolkitProvider\n      keyField={ props.keyField }\n      data={ props.data }\n      columns={ props.columns }\n      search={{\n        defaultSearch: props.searchInput ?\n          props.searchInput :\n          ''\n      }}\n    >\n      {innerprops => (\n        <div style={{margin: '1%'}}>\n        { props.search === true ?\n          <SearchBar\n            { ...innerprops.searchProps }\n            onSearch={(e) => {innerprops.searchProps.onSearch(e); props.setSearchInput(e);}}\n            style={{boxShadow: 'none', borderColor: 'grey'}}\n            srText=''\n          /> :\n          <div />\n        }\n          <hr style={{marginTop: '0.6em'}}/>\n          <BootstrapTable\n            { ...innerprops.baseProps }\n            // rowStyle={{ fontSize: 'small', border: '1px solid black' }}\n            rowStyle={ props.rowStyle } //{{ ...props.rowStyle, fontSize: 'small' }}\n            editCellStyle={{ fontSize: 'small' }}\n            editorStyle={{ fontSize: 'small' }}\n            cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true, afterSaveCell }) }\n            // striped   // Disabled due to expandrow causing visual jumps\n            rowClasses={ props.rowClasses }\n            selectRow={ props.selectRow }\n            expandRow={ props.expandRow }\n            defaultSorted={ props.defaultSorted }\n            ref = { props.ref }\n          />\n        </div>\n      )}\n\n    </ToolkitProvider>\n  );\n}\n\nexport default DatatablePage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport {\n  IoLockClosed\n} from 'react-icons/io5'; // MIT Licensed icons\nimport { v4 as uuidv4 } from 'uuid';\n\nimport DatatablePage from './Table';\n\nimport './App.css';\n\n\nvar host = window.location.hostname;\n\nfunction Lobbies(props) {\n\n  const lobbyColumns=[{\n        dataField: 'lobbyName',\n        text: 'Lobby'\n      }, {\n        dataField: 'lobbyId',\n        text: 'Lobby ID',\n        editable: false\n        //hidden: true\n      }, {\n        dataField: 'numPlayers',\n        text: 'Players'\n      }, {\n        dataField: 'private',\n        text: 'Private',\n        editable: false,\n        isDummyField: true,\n        headerStyle: (colum, colIndex) => {\n         return {width: '5em', textAlign: 'center'}\n        },\n        formatter: (cell, row, rowIndex, formatExtraData) => {\n          if (row.private) {\n            return (\n              <IoLockClosed size={18} />\n            );\n          } else {\n            return (<div />);\n          }\n        }\n      }\n  ];\n\n\n  const selectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    clickToEdit: false,\n    hideSelectColumn: true,\n    bgColor: `var(--uap-color-primary)`,\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (props.userName === '') {\n        props.setShowUserModal(true);\n\n        return;\n      }\n\n      if (props.lobbyId !== '') {\n        if (props.lobbyId === row.lobbyId) {\n          return;\n        }\n        if (!window.confirm(`Change from Lobby:\\n\\t${props.lobby.lobbyName}\\nto Lobby\\n\\t${row.lobbyName} ?`)) {\n          return;\n        }\n      }\n\n      if (row.private) {\n        var pw = prompt(\"Please enter this lobby's password\");\n        if (pw === null) {\n          alert('Nothing was entered');\n          return;\n        }\n\n        var url = 'http://' + host + ':5069/check_lobby_password';\n\n        fetch(url, {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n          },\n          //signal: controller.signal,\n          body: JSON.stringify({lobbyId: row.lobbyId, pw: pw})\n        })\n          .then(response => response.json())\n          .then(data => {\n            if (data.status) {\n              props.setLobbyId(row.lobbyId);\n              props.setLobby(row);\n              props.setOpenLobbyPanel(true);\n\n              props.socket.emit('joinLobby', {roomCode: row.lobbyId, lobbyName: row.lobbyName, userID: props.userName});\n            } else {\n              alert('Incorrect password');\n            }\n          });\n\n        return;\n      }\n\n      props.setLobbyId(row.lobbyId);\n      props.setLobby(row);\n      props.setOpenLobbyPanel(true);\n\n      props.socket.emit('joinLobby', {roomCode: row.lobbyId, lobbyName: row.lobbyName, userID: props.userName});\n    }\n  };\n\n\n  return (\n    <Container>\n      <br />\n      <Row className='justify-content-center'>\n        <Col className='justify-content-center d-flex'>\n          <h1> Lobbies </h1>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col xs='3' className='justify-content-center'>\n          <Button\n            className='primaryButton'\n            onClick={() => {\n              if (props.userName === '') {\n                props.setShowUserModal(true);\n\n                return;\n              }\n\n              const lobbyName = prompt('Lobby Name');\n\n              if (lobbyName === null) {\n                return;\n              }\n\n              const lobbyPW   = prompt('Password [leave blank for public lobby]');\n              var newID = uuidv4().slice(-6).toUpperCase(); //Math.random().toString(36).substr(2, 6).toUpperCase();\n\n              while(props.lobbies.map((lobby) => lobby.lobbyId).includes(newID)) {\n                newID = uuidv4().slice(-6).toUpperCase(); //Math.random().toString(36).substr(2, 6).toUpperCase();\n              }\n\n              props.setLobbyId(newID);\n              props.setOpenLobbyPanel(true);\n\n              props.socket.emit('createLobby', {\n                lobbyId: newID,\n                lobbyName: lobbyName,\n                lobbyPW: lobbyPW,\n                creatorPlayer: props.userName\n              });\n            }}\n          >\n            Create Lobby\n          </Button>\n        </Col>\n        <Col xs='3' className='justify-content-center'>\n          <Button\n            className='primaryButton'\n            onClick={() => {\n              console.log(prompt('Lobby ID: '));\n            }}\n            disabled={true}\n          >\n            Join Lobby By ID\n          </Button>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col className=' d-flex justify-content-start'>\n          <DatatablePage\n            keyField='lobbyId'\n            columns={lobbyColumns}\n            data={props.lobbies.filter(function(lobby) { return !lobby.inProgress })}\n            search={true}\n            searchInput={props.searchInput}\n            setSearchInput={props.setSearchInput}\n            selectRow={selectRow}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Lobbies;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport {\n  IoCheckmarkCircleOutline\n} from 'react-icons/io5'; // MIT Licensed icons\nimport { v4 as uuidv4 } from 'uuid';\n\nimport DatatablePage from './Table';\nimport Editor from './Editor';\n\nimport './App.css';\n\nvar host = window.location.hostname;\n\nfunction Lobby(props) {\n  const [refresh, setRefresh] = useState(false);\n\n  const navigate = useNavigate();\n\n  const playerListColumns = [{\n      dataField: 'playerName',\n      text: 'Player',\n      editable: false,\n      style: {\n        verticalAlign: 'middle',\n        fontSize: '1.25em'\n      },\n    }, {\n      dataField: 'playerReady',\n      text: 'Ready',\n      editable: false,\n      isDummyField: true,\n      headerStyle: (colum, colIndex) => {\n       return {width: '5em', textAlign: 'center'}\n      },\n      formatExtraData: props.lobby,\n      formatter: (cell, row, rowIndex, formatExtraData) => {\n        if (formatExtraData.players[rowIndex].playerReady) {\n          return (\n            <IoCheckmarkCircleOutline size={24} color={'green'}/>\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  ];\n\n  const playerSelectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    clickToEdit: false,\n    hideSelectColumn: true,\n    // bgColor: 'green',\n    onSelect: (row, isSelect, rowIndex, e) => {\n      console.log(row);\n      console.log(rowIndex);\n      var _lobby = {...props.lobby};\n\n      if (_lobby.players[rowIndex].playerName === props.userName) {\n        setRefresh(true);\n        _lobby.players[rowIndex].playerReady = !_lobby.players[rowIndex].playerReady;\n        props.socket.emit('registerPlayerReadyState', {playerName: props.userName, playerReady: _lobby.players[rowIndex].playerReady, lobbyId: _lobby.lobbyId});\n      }\n    }\n  };\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'transparent !important',\n      boxShadow: 'none',\n    })\n  };\n\n\n  useEffect(() => {\n    if (refresh) {\n      setRefresh(false);\n    }\n  }, [refresh]);\n\n\n  if (props.lobby === undefined) { return (<div/>) } else {\n  return (\n    <Container>\n      <br />\n      <Row className='justify-content-center'>\n        <Col className='justify-content-center d-flex'>\n          <h1> Lobby </h1>\n        </Col>\n        <hr />\n      </Row>\n\n      <Row className='justify-content-center'>\n        <Col className=' d-flex justify-content-center'>\n          <h2>\n            {props.lobby !== undefined ? props.lobby.lobbyName : ''}\n          </h2>\n        </Col>\n      </Row>\n      <Row className='justify-content-center' style={{height: '5em'}}>\n        <Col xs='2' className=' d-flex justify-content-center'>\n          <h4> Map Selection: </h4>\n        </Col>\n        {\n          props.userName === props.lobby.host ?\n        <Col xs='6' className='justify-content-center'>\n          <Select\n            options={props.mapOptions}\n            value={props.lobbyMapSelection}\n            //value={props.mapOptions.filter((map) => map.label === props.lobby.mapLabel)[0]}\n            onChange={(e) => {\n              //props.setLobbyMapSelection(e);\n              props.socket.emit('setLobbyMap', {lobbyId: props.lobbyId, mapLabel: e.label})\n            }}\n            filterOption={(candidate, input) => {\n              if (candidate.label !== 'New') {\n                return true;\n              } else {\n                return false;\n              }\n            }}\n            styles={primarySelectStyles}\n          />\n          </Col> : \n          <Col xs='6'>\n            <span style={{display: 'inline', verticalAlign: 'middle', fontSize: '1.5em', color: 'red'}}> Must be lobby host to edit map </span>\n          </Col>\n        }\n        <Col xs='4' className='d-flex justify-content-center' style={{width: '30%'}}>\n          { props.lobby.mapLabel !== '' ?\n          <Editor\n              userName={props.userName}\n              newMap={props.newMap}\n              setNewMap={props.setNewMap}\n              mapOptions={props.mapOptions}\n              setMapOptions={props.setMapOptions}\n              viewMode={'viewOnly'}\n              //mapSelection={props.lobbyMapSelection}\n              mapSelection={props.mapOptions.filter((map) => map.label === props.lobby.mapLabel)[0]}\n              setMapSelection={props.setLobbyMapSelection}\n              socket={props.socket}\n          /> :\n          <div />\n        }\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs='6'>\n        { refresh ?\n          <div /> :\n          <DatatablePage\n            keyField='playerName'\n            columns={playerListColumns}\n            data={props.lobby.players}\n            selectRow={playerSelectRow}\n          />\n        }\n        </Col>\n      </Row>\n\n      <Row className='d-flex justify-content-center' style={{position: 'fixed', bottom: '5em', width: '50vw'}}>\n        <Col className=' d-flex justify-content-center'>\n          <Button\n            className='warningButton'\n            style={{marginTop: '1em'}}\n            onClick={() => {\n              props.socket.emit('leaveLobby', {roomCode: props.lobbyId, player: props.lobby.players.filter((player) => player.playerName === props.userName)[0]});\n              props.setOpenLobbyPanel(false);\n              props.setLobbyId('');\n            }}\n          >\n            Leave Lobby\n          </Button>\n        </Col>\n      </Row>\n\n      {\n        props.lobby.players.every((player) => player.playerReady === true) && props.lobby.mapLabel !== '' ?\n          <Row className='d-flex justify-content-center' style={{position: 'fixed', bottom: '2em', width: '50vw'}}>\n            <Col xs='8' className='d-flex justify-content-center'>\n              <Button\n                className='primaryButton'\n                style={{marginTop: '1em', width: '100%'}}\n                onClick={() => {\n                  //props.setOpenLobbyPanel(false);\n                  //let newGameId = uuidv4().slice(-6).toUpperCase();\n                  //navigate(`/gamesession/${props.lobby.lobbyId}`, {replace: true});\n                  //props.setGameCodeId(newGameId);\n                  props.socket.emit('gameStart', {players: props.lobby.players, 'roomCode': props.lobby.lobbyId});\n                }}\n              >\n                Start Game\n              </Button>\n            </Col>\n          </Row> :\n          <div />\n      }\n    </Container>\n  );}\n}\n\nexport default Lobby;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport Konva from \"konva\";\nimport {\n  Stage,\n  Layer,\n  Text,\n  Image,\n  Line,\n  Rect,\n  Circle,\n  Arrow,\n  RegularPolygon,\n} from 'react-konva';\n\nimport {\n  IoPersonCircleOutline,\n  IoPencil,\n  IoCaretUp,\n  IoCaretDown\n} from 'react-icons/io5'; // MIT Licensed icons\nimport DatatablePage from './Table';\nimport SlidingPanel from 'react-sliding-side-panel';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport './App.css';\n\nimport Home from './Home';\nimport { defaultMapNames } from './defaultMapNames';\n\nvar host = window.location.hostname;\n\nfunction GameSession(props) {\n  const [spaceOptions, setSpaceOptions] = useState([\n    {label: '1 - Safe', value: 'safe', color: 'white', numTiles: 0, maxTiles: -1},\n    {label: '2 - Dangerous', value: 'dangerous', color: 'grey', numTiles: 0, maxTiles: -1},\n    {label: '3 - Human Spawn', value: 'hspawn', color: 'purple', numTiles: 0, maxTiles: 1},\n    {label: '4 - Alien Spawn', value: 'aspawn', color: 'red', numTiles: 0, maxTiles: 1},\n    {label: '5 - Escape Pod', value: 'escapepod', color: 'orange', numTiles: 0, maxTiles: 4},\n    {label: '6 - Remove', value: 'remove', color: '', numTiles: 0, maxTiles: -1}\n  ]);\n\n  const [toggleDrawingBtnColor, setToggleDrawingBtnColor] = useState('grey');\n  const [currSpace, setCurrSpace] = useState();\n  const [prevSpace, setPrevSpace] = useState();\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n  const [spaceSelector, setSpaceSelector] = useState(spaceOptions[0]);\n  const [itemTrayPanelOpen, setItemTrayPanelOpen] = useState(false);\n  const [pathViewPlayer, setPathViewPlayer] = useState('');\n\n  // document.addEventListener('keydown', function(event) {\n  //   const keycode = parseInt(event.keyCode);\n  //   if ((keycode >= 49 && keycode <= (48 + spaceOptions.length)) && mapEditor) {\n  //     console.log('Setting space options');\n  //     setSpaceSelector(spaceOptions[keycode - 49]);\n  //   }\n  // });\n\n  // client-side\n  useEffect(() => {\n    props.socket.on(\"connect\", () => {  console.log(props.socket.id); });\n    props.socket.on(\"responseMessage\", (data) => {  console.log(data); });\n    props.socket.on(\"connect_error\", (err) => {  console.log(`connect_error due to ${err.message}`);});\n  }, []);\n\n\n  useEffect(() => {\n    if (props.playerState !== undefined) {\n      setCurrSpace(props.playerState.pos);\n      setPrevSpace(props.playerState.pos);\n    }\n  }, props.playerState);\n\n\n  const XY2Tile = (x, y) => {\n    return `${String.fromCharCode('A'.charCodeAt(0) + x)}${y.toString().padStart(2, '0')}`;\n  }\n\n\n  /**************************************************/\n    class PriorityQueue {\n      constructor() {\n          this.elements = [];\n      }\n\n      enqueue(element, priority) {\n          this.elements.push({ element, priority });\n          this.elements.sort((a, b) => a.priority - b.priority);\n      }\n\n      dequeue() {\n          return this.elements.shift().element;\n      }\n\n      isEmpty() {\n          return this.elements.length === 0;\n      }\n  }\n\n  const hexDistance = (x1, y1, x2, y2) => {\n      // Adjust y coordinates for odd columns\n      if (x1 % 2 !== 0 && x2 % 2 !== 0) {\n          y1 -= 1;\n          y2 -= 1;\n      } else if (x1 % 2 === 0 && x2 % 2 === 0) {\n          y1 += 1;\n          y2 += 1;\n      }\n\n      let dx = Math.abs(x2 - x1);\n      let dy = Math.abs(y2 - y1);\n      let dx_dy = Math.abs(dx - dy);\n\n      return Math.max(dx, dy, dx_dy);\n  }\n\n  const findShortestPath = (startTile, endTile, grid) => {\n      // A* algorithm implementation\n      let openSet = new PriorityQueue();\n      let cameFrom = new Map();\n      let gScore = new Map();\n      let fScore = new Map();\n\n      const endX = endTile.match(/\\D/g)[0].charCodeAt(0) - 'A'.charCodeAt(0);\n      const startX = startTile.match(/\\D/g)[0].charCodeAt(0) - 'A'.charCodeAt(0);\n      const endY = parseInt(endTile.match(/\\d+/g)[0]);\n      const startY = parseInt(startTile.match(/\\d+/g)[0]);\n\n      gScore.set(`${startX},${startY}`, 0);\n      fScore.set(`${startX},${startY}`, hexDistance(startX, startY, endX, endY));\n\n      openSet.enqueue(`${startX},${startY}`, fScore.get(`${startX},${startY}`));\n\n      while (!openSet.isEmpty()) {\n          let current = openSet.dequeue();\n          let [currentX, currentY] = current.split(',').map(Number);\n\n          if (currentX === endX && currentY === endY) {\n              // Found the end point, reconstruct path\n              let path = [];\n              while (cameFrom.has(`${currentX},${currentY}`)) {\n                  path.unshift([currentX, currentY]);\n                  [currentX, currentY] = cameFrom.get(`${currentX},${currentY}`);\n              }\n              path.unshift([startX, startY]);\n              return path.map((tile) => {return XY2Tile(tile[0], tile[1])});\n          }\n\n          let neighbors = getHexNeighbors(currentX, currentY, grid);\n\n          for (let neighbor of neighbors) {\n              let [neighborX, neighborY] = neighbor;\n\n              let tentative_gScore = gScore.get(`${currentX},${currentY}`) + 1;\n\n              if (!gScore.has(`${neighborX},${neighborY}`) || tentative_gScore < gScore.get(`${neighborX},${neighborY}`)) {\n                  // Found a better path to the neighbor\n                  cameFrom.set(`${neighborX},${neighborY}`, [currentX, currentY]);\n                  gScore.set(`${neighborX},${neighborY}`, tentative_gScore);\n                  fScore.set(`${neighborX},${neighborY}`, tentative_gScore + hexDistance(neighborX, neighborY, endX, endY));\n\n                  if (!openSet.elements.some(el => el.element === `${neighborX},${neighborY}`)) {\n                      openSet.enqueue(`${neighborX},${neighborY}`, fScore.get(`${neighborX},${neighborY}`));\n                  }\n              }\n          }\n      }\n\n      // No path found\n      return null;\n  }\n\n  const getHexNeighbors = (x, y, grid) => {\n      let neighbors = [];\n      let directions = [];\n\n      if (x % 2 === 1) {\n        /* Adjust for even/odd columns */\n        /* Odd columns share the same row number as the tiles diagonally above them */\n        directions = [\n            [1, 0], [1, 1], [0, 1],\n            [-1, 1], [-1, 0], [0, -1]\n        ];\n      } else {\n        directions = [\n            [1, 0], [0, 1], [-1, 0],\n            [-1, -1], [0, -1], [1, -1]\n        ];\n      }\n\n      for (let dir of directions) {\n          let nx = x + dir[0];\n          let ny = y + dir[1];\n\n          if (Object.keys(grid).includes(`${String.fromCharCode('A'.charCodeAt(0) + nx)}${ny.toString().padStart(2, '0')}`)) {\n              neighbors.push([nx, ny]);\n          }\n      }\n\n      return neighbors;\n  }\n\n\n  const hexClickHandle = (e, id) => {\n    if (props.noiseTileSelectEn) {\n      props.setNoiseTile(id);\n    } else {\n      const new_x = id.match(/\\D/g)[0].charCodeAt(0);\n      const old_x = currSpace.match(/\\D/g)[0].charCodeAt(0);\n      const new_y = parseInt(id.match(/\\d+/g)[0]);\n      const old_y = parseInt(currSpace.match(/\\d+/g)[0]);\n\n      let path = findShortestPath(prevSpace, id, props.mapSelection.value.tiles);\n\n      let dx = new_x - old_x;\n      let dy = new_y - old_y;\n\n      const movement_limit = props.playerState.maxMovement;\n\n      if ((path.length - 1) <= movement_limit) {\n        setCurrSpace(id);\n      }\n    }\n  }\n\n\n  const generateMap = () => {\n    if (prevSpace === undefined) { return []; } \n    let hexagons = []\n\n    for (let row = 1; row < 15; row++) {\n      for (let col = 0; col < 23; col++) {\n        let id = String.fromCharCode(0x41 + col) + (row).toString().padStart(2, '0');\n\n        if (id in props.mapSelection.value.tiles && props.mapSelection.value.tiles[id].tileType !== 'remove') {\n          hexagons.push(\n            <>\n            <Text\n              text={id}\n              fontSize={12}\n              x={26 + (col * (36 + 18))}\n              y={31 + (row * (36 + 27)) + (col % 2)*31}\n            />\n            <RegularPolygon\n              perfectDrawEnabled={false}\n              shadow={false}\n              key={id}\n              id={id}\n              x={36 + (col * (36 + 18))}\n              y={36 + (row * (36 + 27)) + (col % 2)*31}\n              sides={6}\n              radius={36}\n              //fill={id === currSpace ? 'green' : props.mapSelection.value.tiles[id].color}\n\n              fillRadialGradientStartPoint={{ x: 0, y: 0 }}\n              fillRadialGradientStartRadius={12}\n              fillRadialGradientEndPoint= {{ x: 0, y: 0 }}\n              fillRadialGradientEndRadius={50}\n              fillRadialGradientColorStops= {[\n                0,\n                props.mapSelection.value.tiles[id].color,\n                0.5,\n                (id == currSpace) ?\n                  '#51ff0d' :\n                  (id == prevSpace && currSpace !== prevSpace) ?\n                    'blue' :\n                    (findShortestPath(prevSpace, id, props.mapSelection.value.tiles).length - 1) <= props.playerState.maxMovement ? 'yellow' :\n                    props.mapSelection.value.tiles[id].color\n              ]}\n\n              stroke={'black'}\n              strokeWidth={1}\n              onClick={(e) => { hexClickHandle(e, id); }}\n              onTap={(e) => {hexClickHandle(e, id); }}\n              name={id}\n              fillAfterStrokeEnabled={true}\n              opacity={0.50}\n              rotation={90}\n            />\n            </>\n          );\n        }\n      }\n    }\n\n    return hexagons;\n  }\n\n\n  const [lines, setLines] = React.useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [drawingEnabled, setDrawingEnabled] = useState(false);\n\n  const handleMouseDown = (e) => {\n    setIsDrawing(true);\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = e.target.getStage().getPointerPosition();\n    point = transform.point(point);\n    setLines([...lines, { points: [point.x, point.y] }]);\n  };\n\n  const layerRef = React.useRef();\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if ((!(isDrawing && drawingEnabled)) || lines.length === 0) {\n      return;\n    }\n    const stage = e.target.getStage();\n    var transform = layerRef.current.getAbsoluteTransform().copy();\n    // to detect relative position we need to invert transform\n    transform.invert();\n    let point = stage.getPointerPosition();\n    point = transform.point(point);\n    let lastLine = {points: []};\n    if (lines.length !== 0) {\n      lastLine = lines[lines.length - 1];\n    }\n    // add point\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n\n \n  const generatePlayerPath = () => {\n    var path = [];\n    var tile_history = [];\n    let uncertainty_r = 0;\n\n    props.turnHistory.filter(function(turn) {return turn.player === pathViewPlayer}).forEach((turn) => {\n      if (turn.tile !== '-') {\n        if (tile_history.length > 0) { \n          let prevSpace = tile_history[tile_history.length - 1];\n          path.push(\n            <Arrow\n              points={[getRow(prevSpace), getCol(prevSpace), getRow(turn.tile), getCol(turn.tile)]}\n              pointerLength={10}\n              pointerWidth={4}\n              fill='cyan'\n              stroke='cyan'\n              strokeWidth={2}\n              opacity={0.7}\n            />\n          );\n        }\n\n        tile_history.push(turn.tile);\n        uncertainty_r = 0;\n      } else if (tile_history.length > 0) {\n        let prevSpace = tile_history[tile_history.length - 1];\n\n        uncertainty_r += 1;\n\n        if (uncertainty_r > 1) {\n          path.pop();\n        }\n\n        path.push(\n          <Circle\n            x={getRow(prevSpace)}\n            y={getCol(prevSpace)}\n            radius={72 * uncertainty_r}\n            strokeWidth={3}\n            stroke={'pink'}\n            // fill={'rgba(66, 245, 245, 0.0)'}\n          />\n        );\n      }\n    });\n\n    return path;\n  }\n\n\n  const primarySelectStyles = {\n    control: base => ({\n      ...base,\n      borderColor: 'grey !important',\n      boxShadow: 'none',\n      marginBottom: '1em',\n    })\n  };\n\n  const playerTableSelectRow = {\n    mode: 'radio',\n    hideSelectColumn: true,\n    clickToSelect: true,\n    clickToEdit: false,\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (row.player === pathViewPlayer) {\n        setPathViewPlayer('');\n      } else {\n        setPathViewPlayer(row.player);\n      }\n    }\n  };\n\n  const getRow = (id) => {\n    var col = (id.match('[A-Z]')[0].charCodeAt(0) - 'A'.charCodeAt(0));\n    return 36 + (col*(36+18));\n  };\n\n  const getCol = (id) => {    \n    var row = parseInt(id.match('[0-9]+')[0]);\n    var col = (id.match('[A-Z]')[0].charCodeAt(0) - 'A'.charCodeAt(0));\n    console.log(col);\n    var col_adjust_const = (col % 2 === 0) ? 0 : 36;\n    var ret = 36 + (row * (36+27)) + col_adjust_const;\n\n    return ret;\n  };\n\n  const [stageScaleX, setStageScaleX] = useState(1.5);\n  const [stageScaleY, setStageScaleY] = useState(1.5);\n  if (props.playerState === undefined) {\n    return (<div />);\n  } else {\n    return (\n      <>\n        <Container fluid>\n        <Row className='d-flex' style={{height: '60vh'}}>\n          <Col xs='8' xl='8' className='align-items-center d-flex' style={{height: '75vh'}}>\n            <Stage\n              pixelRatio={1.5}\n              style={{marginTop: '1em', display: 'flex', justifyContent: 'center'}}\n              width={window.innerWidth * 0.65}  // 10/12 col width\n              height={window.innerWidth > 1400 ? window.innerHeight * 0.85 : window.innerHeight * 0.60}\n              onWheel={(e) => {\n                e.evt.preventDefault();\n                if (e.evt.deltaY > 15 || e.evt.deltaY < 15) {\n                  setStageScaleX(stageScaleX - (e.evt.deltaY/250));\n                  setStageScaleY(stageScaleX - (e.evt.deltaY/250));\n                }\n              }}\n              // scaleY={viewMode === 'viewOnly' ? 0.45 : stageScaleY}\n              // scaleX={viewMode === 'viewOnly' ? 0.45 : stageScaleX}\n              scaleY={stageScaleY}\n              scaleX={stageScaleX}\n              onMouseDown={handleMouseDown}\n              onMousemove={handleMouseMove}\n              onTouchStart={handleMouseDown}\n              onTouchmove={handleMouseMove}\n              onMouseup={handleMouseUp}\n              draggable={!drawingEnabled}\n              offsetX={window.innerWidth / 10}\n              //offsetX={window.innerWidth / 10}\n            >\n              <Layer>\n              {\n                generateMap()\n              }\n              </Layer>\n              <Layer listening={false}>\n              {currSpace !== prevSpace ?\n                  <Arrow\n                    points={[getRow(prevSpace), getCol(prevSpace), getRow(currSpace), getCol(currSpace)]}\n                    pointerLength={10}\n                    pointerWidth={4}\n                    fill='black'\n                    stroke='black'\n                    strokeWidth={2}\n                    opacity={0.7}\n                  /> :\n                  <div />\n                }\n              </Layer>\n              <Layer listening={false}>\n              {generatePlayerPath()}\n              </Layer>\n              <Layer ref={layerRef}>\n                {lines.map((line, i) => (\n                  <Line\n                    key={i}\n                    points={line.points}\n                    stroke=\"#df4b26\"\n                    strokeWidth={5}\n                    tension={0.5}\n                    lineCap=\"round\"\n                    globalCompositeOperation={'source-over'}\n                  />\n                ))}\n              </Layer>\n            </Stage>\n          </Col>\n          <Col xs='4' xl='4'>\n            <Row xs='12'>\n              <Col xs='12'>\n            {/*<div style={{position: 'absolute', top: '5em'}}>*/}\n                <DatatablePage\n                  keyField='player'\n                  rowStyle={(row, rowIndex) => {return {backgroundColor: row.player === props.currPlayer ? `var(--color-primary)` : 'inherit'}; }}\n                  columns={[\n                    {dataField: 'player', text: 'Player'\n                  }]}\n                  //data={props.lobby.players.map((player) => { return {'player': player.playerName}})}\n                  data={props.playerTurnOrder.map((player) => { return {'player': player}; })}\n                />\n{/*            </div>*/}\n              </Col>\n            </Row>\n            <Row xs='12'>\n              <Col xs='12'>\n              { props.currPlayer === props.userName ?\n                  <Button\n                    className='primaryButton'\n                    onClick={(e) => {\n                      setPrevSpace(currSpace);\n                      props.socket.emit('turnSubmit', {\n                        tile: currSpace,\n                        tileType: props.mapSelection.value.tiles[currSpace].tileType,\n                        lobbyId: props.lobby.lobbyId,\n                        playerId: props.userName\n                      });\n                    }}\n                    disabled={currSpace === prevSpace}\n                    style={{width: '90%', marginTop: '0em', marginLeft: '0em', borderColor: 'grey', backgroundColor: currSpace === prevSpace ?  `var(--color-warning)` : `var(--color-primary)`}}\n                  >\n                    {currSpace === prevSpace ? \"Must Move\" : \"End Turn\"}\n                  </Button> :\n                  <div />\n              }\n              </Col>\n            </Row>\n            { (window.innerWidth > 1400) ? \n              <Row xs='12'>\n                <Col xs='12' style={{overflowY: 'auto', height: '45vh'}}>\n                  <DatatablePage\n                    keyField='turn'\n                    rowStyle={(row, rowIndex) => {\n                      let bgColor = 'inherit';\n\n                      if (row.event === 'attack') {\n                        bgColor = `var(--color-danger)`;\n                      } else if (row.player === pathViewPlayer) { // Attack bgColor takes precedence\n                        bgColor = `var(--color-info)`;\n                      }\n                      return {backgroundColor: bgColor};\n                    }}\n                    selectRow={playerTableSelectRow}\n                    columns={[\n                      {dataField: 'turn', text: 'Turn', sort: true, editable: false},\n                      { dataField: 'player',\n                        text: 'Player',\n                        sort: true,\n                        // sortFunc: (a, b, order, dataField, rowA, rowB) => {\n                        //   // Your custom sorting logic here\n                        //   // let playerA = a.split(' -> ')[0];\n                        //   // let playerB = b.split(' -> ')[0];\n                        //   a = a.split(' -> ')[0];\n                        //   b = b.split(' -> ')[0];\n                        //   console.log(a);\n                        //   console.log(b);\n\n                        //   if (order === 'asc') {\n                        //     return b - a;\n                        //   }\n                        //   return a - b; \n                        // },\n                        editable: false,\n                        style: {overflow: 'hidden', whiteSpace: 'nowrap'}\n                      },\n                      {dataField: 'tile', text: 'tile', editable: false},\n                      {dataField: 'event', text: 'Event', editable: false}\n                    ]}\n                    data={props.turnHistory}\n                  />\n                </Col>\n              </Row>:\n                <div />\n            }\n          </Col>\n        </Row> \n        { (window.innerWidth <= 1400) ?  \n              <Row xs='12'>\n                <Col xs='12' style={{overflowY: 'auto', height: '25vh'}}>\n                  <DatatablePage\n                    keyField='turn'\n                    rowStyle={(row, rowIndex) => {return {backgroundColor: row.event === 'attack' ? `var(--color-danger)` : 'inherit'}; }}\n                    columns={[\n                      {\n                        dataField: 'turn',\n                        text: 'Turn',\n                        sort: true, \n                        editable: false\n                      },\n                      {dataField: 'player', text: 'Player', sort: true, editable: false, style: {overflow: 'hidden', whiteSpace: 'nowrap'}},\n                      {dataField: 'tile', text: 'tile', editable: false},\n                      {dataField: 'event', text: 'Event', editable: false}\n                    ]}\n                    data={props.turnHistory}\n                  />\n                </Col>\n              </Row>\n              :\n              <div />\n        }\n        <Row className='align-items-center d-flex'>\n          <Col xs='12' style={{position: 'fixed', bottom: '6em'}}>\n            <Button className='warningButton' style={{width: '100%', height: '2.5em'}} onClick={(e)=>{setItemTrayPanelOpen(!itemTrayPanelOpen)}}>\n              Items: 0\n            </Button>\n          </Col>\n        </Row>\n        <Row className='align-items-center d-flex'>\n          <Col xs='12' style={{opacity: '0.8', position: 'fixed', bottom: '2.5em', backgroundColor: props.playerState.role === 'alien' ? 'red' : 'green'}}>\n            <h2 style={{align: 'center', flex: 'display'}}>\n             ROLE: {props.playerState.role.toUpperCase()}\n            </h2>\n          </Col>\n        </Row>\n        <Row className='align-items-center d-flex'>\n          <Col xs='12' style={{position: 'fixed', bottom: '0em'}}>\n            <h4 style={{align: 'center', flex: 'display'}}>\n             Max Movement: {props.playerState.maxMovement}\n            </h4>\n          </Col>\n        </Row>\n        <SlidingPanel\n          type='bottom'\n          isOpen={itemTrayPanelOpen}\n          backdropClicked={() => setItemTrayPanelOpen(false)}\n          noBackdrop={false}\n          size={ 30 }\n        >\n          <div style={{overflow: 'hidden', backgroundColor: '#B5BEC6', height: '100%', paddingBottom: '5em', opacity: '90%'}}>\n            Balls \n          </div>\n        </SlidingPanel>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default GameSession;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, NavLink, useNavigate } from 'react-router-dom';\nimport {\n  Modal,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Button,\n  Dropdown,\n  NavDropdown,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport Select from 'react-select';\nimport { ToastContainer, Slide, cssTransition, toast } from 'react-toastify';\nimport io from 'socket.io-client';\nimport {\n  IoPersonCircleOutline,\n  IoPencil\n} from 'react-icons/io5'; // MIT Licensed icons\nimport SlidingPanel from 'react-sliding-side-panel';\n\n\nimport './App.css';\nimport 'react-sliding-side-panel/lib/index.css';\n\nimport Home from './Home';\nimport Editor from './Editor';\nimport Lobbies from './Lobbies';\nimport Lobby from './Lobby';\nimport GameSession from './GameSession';\n\n// import safeSpace from 'safe-space';\n// import dangerSpace from 'danger-space';\n  \nvar host = window.location.hostname;\nconst socket = io('http://' + host + ':5069');\n\n\nfunction App() {\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [tempUserName, setTempUserName] = useState(userName);\n  const [lobbySearchInput, setLobbySearchInput] = useState('');\n  const [lobbyId, setLobbyId] = useState('');\n  const [lobby, setLobby] = useState();\n  const [lobbies, setLobbies] = useState([]); \n  const [openLobbyPanel, setOpenLobbyPanel] = useState(false);\n  const [newMap, setNewMap] = useState({tiles: {}, meta: {}});\n  const [mapOptions, setMapOptions] = useState([\n    {label: 'New', value: newMap}\n  ]);\n  const [mapEditorSelection, setMapEditorSelection] = useState(mapOptions[0]);\n  const [lobbyMapSelection, setLobbyMapSelection] = useState(null);\n  const [gameCodeId, setGameCodeId] = useState('');\n  //const [role, setRole] = useState('');\n  const [playerState, setPlayerState] = useState();\n  const [notificationEvent, setNotificationEvent] = useState(undefined);\n  const [newUsernameUnavailable, setNewUsernameUnavailable] = useState(false);\n  const [noiseTileSelectEn, setNoiseTileSelectEn] = useState(false);\n  const [noiseTile, setNoiseTile] = useState('');\n  const [updateToastID, setUpdateToastID] = useState();\n  const [turnHistory, setTurnHistory] = useState([]);\n  const [playerTurnOrder, setPlayerTurnOrder] = useState([]);\n  const [currPlayer, setCurrPlayer] = useState('');\n\n\n  const lobbyRef = useRef(lobby);\n  const tempUserNameRef = useRef(tempUserName);\n\n  const navigate = useNavigate();\n\n\n  const handleUserModalClose = () => {\n    setNewUsernameUnavailable(false);\n    setShowUserModal(false);\n  }\n\n  const handleUnload = (e) => {\n    e.preventDefault();\n  }\n\n  /**\n   *  Pagge load useEffect\n   */\n  useEffect(() => {\n    var cached_username = window.localStorage.getItem('username');\n    if (cached_username !== 'null') {\n      socket.emit('registerUsername', {username: cached_username});\n      setTempUserName(cached_username);\n    }\n    //setUserName(window.localStorage.getItem('username'));\n\n    socket.on('emitMapList', (data) => {\n      let _mapOptions = [...mapOptions];\n      setMapOptions([{label: 'New', value: {tiles: [], meta: {safe: 0, dangerous: 0, hspawn: 0, aspawn: 0, escapepod: 0, remove: 0}}}, ...data]);\n    });\n    socket.on('lobbiesList', (data) => {\n      setLobbies(data);\n    });\n\n    socket.on('playerEvent', (data) => {\n      setNotificationEvent({...data, 'state': 'playerEvent'});\n    });\n\n    socket.on('roomEvent', (data) => {\n      setNotificationEvent({...data, 'state': 'roomEvent'});\n    });\n\n    socket.on('updateCurrentPlayer', (data) => {\n      setCurrPlayer(data.currPlayer);\n    });\n\n    // socket.on('lobbyPlayerJoin', (data) => {\n    //   let updated_lobby = {...lobbyRef.current};\n    //   updated_lobby.players.push({playerName: data.playerName, playerReady: false});\n    //   setLobby(updated_lobby);\n    // });\n\n    // socket.on('lobbyPlayerReadyUpdate', (data) => {\n    //   let updated_lobby = {...lobbyRef.current};\n    //   updated_lobby.players[data.playerIdx].playerReady = data.playerReady;\n    //   setLobby(updated_lobby);\n    // });\n\n    socket.on('roleAssignment', (data) => {\n      setPlayerState(data.player);\n    });\n\n    socket.on('joinCreatorToLobby', (data) => {\n      setLobby(lobbies.filter((lobby) => lobby.lobbyId === lobbyId)[0]);\n    })\n\n    socket.on('usernameRegistered', (data) => {\n      setUserName(tempUserNameRef.current);\n      window.localStorage.setItem('username', tempUserNameRef.current);\n      handleUserModalClose();\n    });\n\n    socket.on('usernameUnavailable', (data) => {\n      setNewUsernameUnavailable(true);\n    });\n\n    socket.on(\"gameStartResp\", (data) => {\n      setOpenLobbyPanel(false);\n      navigate(`/gamesession/${lobbyRef.current.lobbyId}`, {replace: true});\n    });\n\n    socket.on('turnOrder', (data) => {\n      setPlayerTurnOrder(data.turnOrder);\n      setCurrPlayer(data.currPlayer);\n    });\n\n    socket.on('connect', (data) => {\n      socket.emit('getLobbies', {});\n      socket.emit('getMapList', {});\n    });\n\n    // Apparently can't send socket events in this event handler\n    //window.addEventListener(\"beforeunload\", handleUnload);\n  }, []);\n\n\n  const noiseTileToast = () => {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <span> Select tile to generate noise at: {noiseTile} </span>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button \n              className='primaryButton'\n              onClick={(e) => {\n                setNoiseTileSelectEn(false);\n                socket.emit('noiseInSector', {\n                  state: 'noise',\n                  tile: noiseTile,\n                  playerId: notificationEvent.playerId,\n                  numHeldCards: notificationEvent.playerNumHeldCards,\n                  lobbyId: lobby.lobbyId,\n                  includeSelf: true\n                });\n                toast.dismiss(updateToastID);\n                setUpdateToastID();\n                setNoiseTile('');\n                setNotificationEvent(undefined);\n              }}> Submit </Button>\n            </Col>\n          </Row>\n      </Container>\n    );\n  }\n\n  useEffect(() => {\n    if (lobbyId !== '') {\n      setLobby(lobbies.filter((lobby) => lobby.lobbyId === lobbyId)[0]);\n    }\n  }, [lobbies]);\n\n\n  useEffect(() => {\n    toast.update(updateToastID, {\n      render: noiseTileToast,\n      toastId: updateToastID\n    });\n  }, [noiseTile]);\n\n\n  useEffect(() => {\n    if (notificationEvent !== undefined) {\n      var card   = notificationEvent.card;\n      var tile   = notificationEvent.tile;\n      var player = notificationEvent.playerId;\n      var event  = card.split(' - ')[0];\n\n      if (event === 'attack') {\n        player = `${player} -> ${notificationEvent.targetPlayer}`\n      }\n\n      if (card !== 'any') {\n        setTurnHistory([...turnHistory, {turn: turnHistory.length, event: event, tile: tile, player: player}]);\n      }\n\n      if (card === 'attack') {\n        toast.error(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            {notificationEvent.targetPlayer} killed by {player} at: {tile}\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );   \n      } else if (card === 'silence') {\n        toast.success(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            Silence in all sectors\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );  \n      } else if (card.includes('silence -')) {\n        toast.success(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            Silence in all sectors + Item!\n            {card.split(' - ')[1]}\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        ); \n      } else if (card === 'noise') {\n        toast.error(\n          <div>\n            <h3>{player}</h3>\n            <hr/>\n            You hear a noise in sector {tile}\n          </div>,\n          {\n            closeOnClick: false,\n            autoClose: 5000\n          }\n        );        \n      } else if (card === 'any') {\n        setNoiseTileSelectEn(true);\n        setUpdateToastID(toast.warning(\n          noiseTileToast,\n          {\n            closeOnClick: false,\n            autoClose: false,\n            draggable: false,\n            closeButton: false\n          }\n        ));\n\n        return;\n      }\n\n      if (notificationEvent.state === 'playerEvent') {\n        socket.emit('noiseInSector', {\n          state: card.includes('silence') ? 'silence' : 'noise',\n          tile: card.includes('silence') ? '-' : tile,\n          playerId: notificationEvent.playerId,\n          numHeldCards: notificationEvent.playerNumHeldCards,\n          lobbyId: lobby.lobbyId,\n          includeSelf: false\n        });\n      }\n      setNotificationEvent(undefined);\n    }\n  }, [notificationEvent]);\n\n\n  useEffect(() => {\n    lobbyRef.current = lobby;\n\n    if (lobby !== undefined) {\n      let map = mapOptions.filter((map) => map.label === lobby.mapLabel);\n\n      if (map.length === 1) {\n        setLobbyMapSelection(map[0]);        \n      }\n    }\n  }, [lobby]);\n\n\n  useEffect(() => {\n    tempUserNameRef.current = tempUserName;\n\n    // window.addEventListener(\"beforeunload\", handleUnload);\n    // return () => window.removeEventListener(\"beforeunload\", handleUnload);\n  }, [tempUserName]);\n\n\n  const handleUsernameSave = () => {\n    // Query for existing usernames\n    console.log('Registering username: ' + tempUserName);\n    socket.emit('registerUsername', {username: tempUserName});\n    // setUserName(tempUserName);\n    // handleUserModalClose();\n  }\n\n\n  return (\n    <div className=\"App\">\n    {\n      playerState === undefined ?\n        <Navbar collapseOnSelect expand='sm' bg='dark' variant='dark' sticky='top'>\n          <Container className=\"me-auto\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav activeKey={window.location.pathname} fill className=\"me-auto\">\n              <Nav.Link as={NavLink} style={{color: 'orange'}} activeStyle={{textDecoration: 'underline', textDecorationThickness: '0.2em', textUnderlineOffset: '0.5em'}} exact to=\"/\">| Home | </Nav.Link>\n              <Nav.Link as={NavLink} style={{color: 'orange'}} activeStyle={{textDecoration: 'underline', textDecorationThickness: '0.2em', textUnderlineOffset: '0.5em'}} to=\"/editor\">| Map Editor | </Nav.Link>\n              <Nav.Link as={NavLink} style={{color: 'orange'}} activeStyle={{textDecoration: 'underline', textDecorationThickness: '0.2em', textUnderlineOffset: '0.5em'}} to=\"/lobbies\">| Lobbies | </Nav.Link>\n            </Nav>\n            <Navbar.Brand style={{marginTop: '-1em', marginBottom: '-1em', marginRight: '0em'}}>\n              {\n                lobbyId.length > 0 ?\n                  <span style={{color: 'orange', fontSize: '0.8em', marginRight: '1em', cursor: 'pointer'}} onClick={() => {setOpenLobbyPanel(true)}}>\n                    | Current Lobby |\n                  </span> :\n                  <div />\n              }\n              <IoPersonCircleOutline size={42} style={{cursor: 'pointer'}} onClick={(e) => {setShowUserModal(true);}} />\n            </Navbar.Brand>\n          </Navbar.Collapse>\n          </Container>\n        </Navbar> :\n        <div />\n      }\n        <Routes>\n          <Route path='/' exact element={<Home />} />\n        </Routes>\n        <Routes>\n          <Route path='/editor' element={\n            <Editor\n              userName={userName}\n              newMap={newMap}\n              setNewMap={setNewMap}\n              mapOptions={mapOptions}\n              setMapOptions={setMapOptions}\n              mapSelection={mapEditorSelection}\n              setMapSelection={setMapEditorSelection}\n              socket={socket}\n            />\n          }/>\n        </Routes>\n        <Routes>\n          <Route path='/lobbies' element={\n            <Lobbies\n              userName={userName}\n              searchInput={lobbySearchInput}\n              lobbies={lobbies}\n              lobby={lobby}\n              setLobby={setLobby}\n              setSearchInput={setLobbySearchInput}\n              lobbyId={lobbyId}\n              setLobbyId={setLobbyId}\n              setOpenLobbyPanel={setOpenLobbyPanel}\n              setShowUserModal={setShowUserModal}\n              socket={socket}\n            />\n          }/>\n        </Routes>\n        <Routes>\n          <Route path='/gamesession/:id' element={\n            <GameSession\n              userName={userName}\n              searchInput={lobbySearchInput}\n              lobbies={lobbies}\n              lobby={lobby}\n              setLobby={setLobby}\n              setSearchInput={setLobbySearchInput}\n              lobbyId={lobbyId}\n              setLobbyId={setLobbyId}\n              setOpenLobbyPanel={setOpenLobbyPanel}\n              socket={socket}\n              mapSelection={lobbyMapSelection}\n              gameCodeId={gameCodeId}\n              playerName={tempUserName}\n              playerState={playerState}\n              noiseTileSelectEn={noiseTileSelectEn}\n              setNoiseTile={setNoiseTile}\n              turnHistory={turnHistory}\n              playerTurnOrder={playerTurnOrder}\n              currPlayer={currPlayer}\n            />\n          }/>\n        </Routes>\n{/*      </Router>*/}\n\n      <Modal show={showUserModal} onHide={handleUserModalClose} onKeyDown={(e) => {if(e.key === 'Enter') {handleUsernameSave();}}}>\n        <Modal.Header>\n          <Modal.Title >User Info</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n          <Row className='align-items-center'>\n            <Col xs={12} className='align-items-center' style={{display: 'flex', justifyContent: 'center'}}>\n              <InputGroup>\n                <FormControl\n                  aria-label=\"User Name\"\n                  value={tempUserName}\n                  style={{boxShadow: 'none', borderColor: 'grey'}}\n                  onChange={(e) => { setTempUserName(e.target.value); }}\n                  // onKeyPress={(e) => {if(e.key === 'Enter') { handleSubmit(e); };}}\n                />\n                <InputGroup.Text><IoPencil/></InputGroup.Text>\n              </InputGroup>\n            </Col>\n          </Row>\n          {\n            newUsernameUnavailable ?\n              <Row className='align-items-center'>\n                <Col className='align-items-center d-flex'>\n                  <span style={{color: 'red'}}> UNAVAILABLE </span>\n                </Col>\n              </Row> :\n              <div />\n            }\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={(e) => {setTempUserName(userName); handleUserModalClose();}}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={(e) => {handleUsernameSave();}}>\n            Save Changes\n          </Button\n>        </Modal.Footer>\n      </Modal>\n\n        <SlidingPanel\n          type='bottom'\n          isOpen={openLobbyPanel}\n          backdropClicked={() => setOpenLobbyPanel(false)}\n          noBackdrop={false}\n          size={ 85 }\n        >\n          <div style={{overflow: 'scroll', backgroundColor: '#B5BEC6', height: '100%', paddingBottom: '5em', opacity: '100%'}}>\n            <Lobby\n              setOpenLobbyPanel={setOpenLobbyPanel}\n              lobbyId={lobbyId}\n              setLobbyId={setLobbyId}\n              lobby={lobby}\n              setLobby={setLobby}\n              mapOptions={mapOptions}\n              setMapOptions={setMapOptions}\n              newMap={newMap}\n              setNewMap={setNewMap}\n              lobbyMapSelection={lobbyMapSelection}\n              setLobbyMapSelection={setLobbyMapSelection}\n              gameCodeId={gameCodeId}\n              setGameCodeId={setGameCodeId}\n              userName={userName}\n              //navigate={navigate}\n              socket={socket}\n            /> \n          </div>\n        </SlidingPanel>\n      <ToastContainer\n        newestOnTop={true}\n        transition={Slide}\n        // transition={cssTransition({\n        //   enter: 'slideIn',\n        //   exit: 'slideOut',\n        // })}\n        draggablePercent={20}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}